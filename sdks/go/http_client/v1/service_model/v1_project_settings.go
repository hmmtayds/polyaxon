// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package service_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1ProjectSettings Project Settings specification
//
// swagger:model v1ProjectSettings
type V1ProjectSettings struct {

	// Authorized agents
	Agents []string `json:"agents"`

	// Authorized connections
	Connections []string `json:"connections"`

	// Default Preset
	Preset string `json:"preset,omitempty"`

	// Authorized Presets
	Presets []string `json:"presets"`

	// Default Queue
	Queue string `json:"queue,omitempty"`

	// Authorized queues
	Queues []string `json:"queues"`

	// Authorized teams
	Teams []string `json:"teams"`
}

// Validate validates this v1 project settings
func (m *V1ProjectSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ProjectSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ProjectSettings) UnmarshalBinary(b []byte) error {
	var res V1ProjectSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
