/**
 * Copyright 2018-2020 Polyaxon, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

syntax = "proto3";

package v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Project specification
message Project {
    // UUID
    string uuid = 1;

    // Required name of user who created this entity
    string user = 2;

    // Read-only email of user who created this entity
    string user_email = 3;

    // Required owner/namespace where the projet was created
    string owner = 4;

    // Required name
    string name = 5;

    // Optional description
    string description = 6;

    // Optional tags of this entity
    repeated string tags = 7;

    // Optional time when the entity was created
    google.protobuf.Timestamp created_at = 8;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 9;

    // Optional flag to tell if this project is public
    bool is_public = 10;

    // Optional if this entity was bookmarked
    bool bookmarked = 11;

    // Optional a readme text describing this entity
    string readme = 12;

    // Optional project settings
    ProjectSettings settings = 13;

    // Optional teams assigned to a project
    repeated string teams = 14;

    // Current user's role in this (org/teams)/project
    string role = 15;
}

 // Request data to create/update project
 message ProjectBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Project body
    Project project = 2;
 }

 // Contains list projects
 message ListProjectsResponse {
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated Project results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}

// Project Settings specification
message ProjectSettings {
    // Authorized connections
    repeated string connections = 1;

    // Default Preset
    string preset = 2;

    // Authorized Presets
    repeated string presets = 3;

    // Default Queue
    string queue = 4;

    // Authorized queues
    repeated string queues = 5;

    // Authorized agents
    repeated string agents = 6;

    // Authorized teams
    repeated string teams = 7;
}

// Request data to update project settings
message ProjectSettingsBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Project name
    string project = 2;

    // Project settings body
    ProjectSettings settings = 3;
 }


// Project teams specification
message ProjectTeams {
    // Teams
    repeated string teams = 1;
}


// Request data to update project teams
message ProjectTeamsBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Project name
    string project = 2;

    // Project settings body
    ProjectTeams teams = 3;
 }
