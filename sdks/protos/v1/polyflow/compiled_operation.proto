/**
 * Copyright 2018-2020 Polyaxon, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

syntax = "proto3";

package v1;

import "google/protobuf/struct.proto";

import "v1/polyflow/actions.proto";
import "v1/polyflow/cache.proto";
import "v1/polyflow/io.proto";
import "v1/polyflow/hooks.proto";
import "v1/polyflow/plugins.proto";
import "v1/polyflow/termination.proto";
import "v1/polyflow/trigger_policy.proto";

// CompiledOperation specification
message CompiledOperation {
    // Spec version
    float version = 1;

    // Optional component kind, should be equal to "operation"
    string kind = 2;

    // Optional component name, should a valid slug
    string name = 3;

    // Optional component description
    string description = 4;

    // Optional component tags
    repeated string tags = 5;

    // Optional presets to use for running this component
    repeated string presets = 6;

    // Optional queue to use for running this component
    string queue = 7;

    // Optional flag to disable cache validation and force run this component
    Cache cache = 8;

    // optional termination section
    Termination termination = 9;

    // Optional plugins to enable
    Plugins plugins = 10;

    // Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)
    google.protobuf.Struct schedule = 11;

    // Optional events section, must be a valid List of Event option (Git/Alert/Webhook/Dataset)
    repeated string events = 12;

    // Optional actions section
    repeated Action actions = 13;

    // Optional hooks section
    repeated Hook hooks = 14;

    // Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)
    google.protobuf.Struct matrix = 15;

    // Optional graph dependencies of this op
    repeated string dependencies = 16;

    // Optional trigger policy
    TriggerPolicy trigger = 17;

    // An optional list of condition to check before starting the run, entities should be a valid Condition
    repeated google.protobuf.Struct conditions = 18;

    // Optional flag to skip this run if upstream was skipped
    bool skip_on_upstream_skip = 19;

    // Optional inputs definition
    repeated IO inputs = 20;

    // Optional outputs definition
    repeated IO outputs = 21;

    // Run definiton, should be one of run composition: Container/Spark/Flink/Kubeflow/Dask/Dag
    google.protobuf.Struct run = 22;
}
