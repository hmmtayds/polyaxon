// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/* tslint:disable */
/* eslint-disable */
/**
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * The version of the OpenAPI document: 1.1.9-rc6
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AgentStateResponseAgentState
 */
export interface AgentStateResponseAgentState {
    /**
     * 
     * @type {object}
     * @memberof AgentStateResponseAgentState
     */
    schedules?: object;
    /**
     * 
     * @type {object}
     * @memberof AgentStateResponseAgentState
     */
    notifier?: object;
    /**
     * 
     * @type {object}
     * @memberof AgentStateResponseAgentState
     */
    watchdogs?: object;
    /**
     * 
     * @type {object}
     * @memberof AgentStateResponseAgentState
     */
    tuners?: object;
    /**
     * 
     * @type {object}
     * @memberof AgentStateResponseAgentState
     */
    queued?: object;
    /**
     * 
     * @type {object}
     * @memberof AgentStateResponseAgentState
     */
    stopping?: object;
    /**
     * 
     * @type {object}
     * @memberof AgentStateResponseAgentState
     */
    apply?: object;
    /**
     * 
     * @type {boolean}
     * @memberof AgentStateResponseAgentState
     */
    full?: boolean;
}

export function AgentStateResponseAgentStateFromJSON(json: any): AgentStateResponseAgentState {
    return AgentStateResponseAgentStateFromJSONTyped(json, false);
}

export function AgentStateResponseAgentStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentStateResponseAgentState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schedules': !exists(json, 'schedules') ? undefined : json['schedules'],
        'notifier': !exists(json, 'notifier') ? undefined : json['notifier'],
        'watchdogs': !exists(json, 'watchdogs') ? undefined : json['watchdogs'],
        'tuners': !exists(json, 'tuners') ? undefined : json['tuners'],
        'queued': !exists(json, 'queued') ? undefined : json['queued'],
        'stopping': !exists(json, 'stopping') ? undefined : json['stopping'],
        'apply': !exists(json, 'apply') ? undefined : json['apply'],
        'full': !exists(json, 'full') ? undefined : json['full'],
    };
}

export function AgentStateResponseAgentStateToJSON(value?: AgentStateResponseAgentState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schedules': value.schedules,
        'notifier': value.notifier,
        'watchdogs': value.watchdogs,
        'tuners': value.tuners,
        'queued': value.queued,
        'stopping': value.stopping,
        'apply': value.apply,
        'full': value.full,
    };
}


