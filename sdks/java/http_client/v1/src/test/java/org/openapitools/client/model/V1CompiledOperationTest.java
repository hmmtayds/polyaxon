// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * The version of the OpenAPI document: 1.1.9-rc6
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.V1Action;
import org.openapitools.client.model.V1Cache;
import org.openapitools.client.model.V1Hook;
import org.openapitools.client.model.V1IO;
import org.openapitools.client.model.V1Plugins;
import org.openapitools.client.model.V1Termination;
import org.openapitools.client.model.V1TriggerPolicy;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for V1CompiledOperation
 */
public class V1CompiledOperationTest {
    private final V1CompiledOperation model = new V1CompiledOperation();

    /**
     * Model tests for V1CompiledOperation
     */
    @Test
    public void testV1CompiledOperation() {
        // TODO: test V1CompiledOperation
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'presets'
     */
    @Test
    public void presetsTest() {
        // TODO: test presets
    }

    /**
     * Test the property 'queue'
     */
    @Test
    public void queueTest() {
        // TODO: test queue
    }

    /**
     * Test the property 'cache'
     */
    @Test
    public void cacheTest() {
        // TODO: test cache
    }

    /**
     * Test the property 'termination'
     */
    @Test
    public void terminationTest() {
        // TODO: test termination
    }

    /**
     * Test the property 'plugins'
     */
    @Test
    public void pluginsTest() {
        // TODO: test plugins
    }

    /**
     * Test the property 'schedule'
     */
    @Test
    public void scheduleTest() {
        // TODO: test schedule
    }

    /**
     * Test the property 'events'
     */
    @Test
    public void eventsTest() {
        // TODO: test events
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'hooks'
     */
    @Test
    public void hooksTest() {
        // TODO: test hooks
    }

    /**
     * Test the property 'matrix'
     */
    @Test
    public void matrixTest() {
        // TODO: test matrix
    }

    /**
     * Test the property 'dependencies'
     */
    @Test
    public void dependenciesTest() {
        // TODO: test dependencies
    }

    /**
     * Test the property 'trigger'
     */
    @Test
    public void triggerTest() {
        // TODO: test trigger
    }

    /**
     * Test the property 'conditions'
     */
    @Test
    public void conditionsTest() {
        // TODO: test conditions
    }

    /**
     * Test the property 'skipOnUpstreamSkip'
     */
    @Test
    public void skipOnUpstreamSkipTest() {
        // TODO: test skipOnUpstreamSkip
    }

    /**
     * Test the property 'inputs'
     */
    @Test
    public void inputsTest() {
        // TODO: test inputs
    }

    /**
     * Test the property 'outputs'
     */
    @Test
    public void outputsTest() {
        // TODO: test outputs
    }

    /**
     * Test the property 'run'
     */
    @Test
    public void runTest() {
        // TODO: test run
    }

}
