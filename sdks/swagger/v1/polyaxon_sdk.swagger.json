{
  "swagger": "2.0",
  "info": {
    "title": "Polyaxon SDKs and REST API specification.",
    "version": "1.1.9-rc6",
    "contact": {
      "name": "Polyaxon sdk",
      "url": "https://github.com/polyaxon/polyaxon",
      "email": "contact@polyaxon.com"
    },
    "description": "Polyaxon SDKs and REST API specification."
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/archives/{user}/projects": {
      "get": {
        "summary": "List archived projects for user",
        "operationId": "ListArchivedProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/archives/{user}/runs": {
      "get": {
        "summary": "List archived runs for user",
        "operationId": "ListArchivedRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "summary": "Change password",
        "operationId": "ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordChange"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "summary": "Reset password",
        "operationId": "ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserEmail"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/auth/reset-password-confirm": {
      "post": {
        "summary": "Reset password confirm",
        "operationId": "ResetPasswordConfirm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Auth"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordChange"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "summary": "Signup",
        "operationId": "Signup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Auth"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserSingup"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/auth/token": {
      "post": {
        "summary": "Login",
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Auth"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Credentials"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/api/v1/bookmarks/{user}/projects": {
      "get": {
        "summary": "List bookmarked projects for user",
        "operationId": "ListBookmarkedProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBookmarksResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/bookmarks/{user}/runs": {
      "get": {
        "summary": "List bookmarked runs for user",
        "operationId": "ListBookmarkedRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBookmarksResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/compatibility/{uuid}/{version}/{service}": {
      "get": {
        "summary": "Get compatibility versions",
        "operationId": "GetCompatibility",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Compatibility"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "UUid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "service",
            "description": "Service",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "VersionsV1"
        ]
      }
    },
    "/api/v1/installation": {
      "get": {
        "summary": "Get installation versions",
        "operationId": "GetInstallation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Installation"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "auth",
            "description": "auth.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "VersionsV1"
        ]
      }
    },
    "/api/v1/log_handler": {
      "get": {
        "summary": "Get log handler versions",
        "operationId": "GetLogHandler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogHandler"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "VersionsV1"
        ]
      }
    },
    "/api/v1/orgs/create": {
      "post": {
        "summary": "Create organization",
        "operationId": "CreateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/list": {
      "get": {
        "summary": "List organizations",
        "operationId": "ListOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/names": {
      "get": {
        "summary": "List organizations names",
        "operationId": "ListOrganizationNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}": {
      "get": {
        "summary": "Get organization",
        "operationId": "GetOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "usage",
            "description": "Owner usage query param.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "delete": {
        "summary": "Delete organization",
        "operationId": "DeleteOrganization",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "usage",
            "description": "Owner usage query param.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "put": {
        "summary": "Update organization",
        "operationId": "UpdateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "patch": {
        "summary": "Patch organization",
        "operationId": "PatchOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents": {
      "get": {
        "summary": "List agents",
        "operationId": "ListAgents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAgentsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "post": {
        "summary": "Create agent",
        "operationId": "CreateAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Agent body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/names": {
      "get": {
        "summary": "List agents names",
        "operationId": "ListAgentNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAgentsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent.uuid}": {
      "put": {
        "summary": "Update agent",
        "operationId": "UpdateAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Agent body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "patch": {
        "summary": "Patch agent",
        "operationId": "PatchAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Agent body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent.uuid}/sync": {
      "patch": {
        "summary": "Sync agent",
        "operationId": "SyncAgent",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Agent body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent}/queues": {
      "get": {
        "summary": "List queues",
        "operationId": "ListQueues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueuesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent man managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      },
      "post": {
        "summary": "Create queue",
        "operationId": "CreateQueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent that consumes the queue",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Queue body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent}/queues/names": {
      "get": {
        "summary": "List queues names",
        "operationId": "ListQueueNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueuesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent man managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent}/queues/{queue.uuid}": {
      "put": {
        "summary": "Update queue",
        "operationId": "UpdateQueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent that consumes the queue",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "queue.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Queue body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      },
      "patch": {
        "summary": "Patch queue",
        "operationId": "PatchQueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent that consumes the queue",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "queue.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Queue body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent}/queues/{uuid}": {
      "get": {
        "summary": "Get queue",
        "operationId": "GetQueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Queue"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      },
      "delete": {
        "summary": "Delete queue",
        "operationId": "DeleteQueue",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{agent}/token": {
      "get": {
        "summary": "Get agent token",
        "operationId": "GetAgentToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent managing the resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "put": {
        "summary": "Update agent token",
        "operationId": "UpdateAgentToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "patch": {
        "summary": "Patch agent token",
        "operationId": "PatchAgentToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent",
            "description": "Agent",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}": {
      "get": {
        "summary": "Get agent",
        "operationId": "GetAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Agent"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "delete": {
        "summary": "Delete agent",
        "operationId": "DeleteAgent",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/state": {
      "get": {
        "summary": "Get State (queues/runs)",
        "operationId": "GetAgentState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AgentStateResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/agents/{uuid}/statuses": {
      "get": {
        "summary": "Get agent status",
        "operationId": "GetAgentStatuses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Status"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      },
      "post": {
        "summary": "Create new run status",
        "operationId": "CreateAgentStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Status"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AgentStatusBodyRequest"
            }
          }
        ],
        "tags": [
          "AgentsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/components": {
      "get": {
        "summary": "List hub components",
        "operationId": "ListComponentHubs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListComponentHubsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ComponentHubV1"
        ]
      },
      "post": {
        "summary": "Create hub component",
        "operationId": "CreateComponentHub",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ComponentHub"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Component body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ComponentHub"
            }
          }
        ],
        "tags": [
          "ComponentHubV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/components/names": {
      "get": {
        "summary": "List hub component names",
        "operationId": "ListComponentHubNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListComponentHubsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ComponentHubV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/components/{component.uuid}": {
      "put": {
        "summary": "Update hub component",
        "operationId": "UpdateComponentHub",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ComponentHub"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "component.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Component body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ComponentHub"
            }
          }
        ],
        "tags": [
          "ComponentHubV1"
        ]
      },
      "patch": {
        "summary": "Patch hub component",
        "operationId": "PatchComponentHub",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ComponentHub"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "component.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Component body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ComponentHub"
            }
          }
        ],
        "tags": [
          "ComponentHubV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/components/{uuid}": {
      "get": {
        "summary": "Get hub component",
        "operationId": "GetComponentHub",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ComponentHub"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ComponentHubV1"
        ]
      },
      "delete": {
        "summary": "Delete hub component",
        "operationId": "DeleteComponentHub",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ComponentHubV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/connections": {
      "get": {
        "summary": "List connections",
        "operationId": "ListConnections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListConnectionsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      },
      "post": {
        "summary": "Create connection",
        "operationId": "CreateConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/connections/names": {
      "get": {
        "summary": "List connections names",
        "operationId": "ListConnectionNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListConnectionsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/connections/{connection.uuid}": {
      "put": {
        "summary": "Update connection",
        "operationId": "UpdateConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connection.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      },
      "patch": {
        "summary": "Patch connection",
        "operationId": "PatchConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connection.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/connections/{uuid}": {
      "get": {
        "summary": "Get connection",
        "operationId": "GetConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConnectionResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      },
      "delete": {
        "summary": "Delete connection",
        "operationId": "DeleteConnection",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/dashboards": {
      "get": {
        "summary": "List dashboards",
        "operationId": "ListDashboards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDashboardsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      },
      "post": {
        "summary": "Create dashboard",
        "operationId": "CreateDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/dashboards/names": {
      "get": {
        "summary": "List dashboard names",
        "operationId": "ListDashboardNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDashboardsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/dashboards/{dashboard.uuid}": {
      "put": {
        "summary": "Update dashboard",
        "operationId": "UpdateDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dashboard.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      },
      "patch": {
        "summary": "Patch dashboard",
        "operationId": "PatchDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dashboard.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/dashboards/{uuid}": {
      "get": {
        "summary": "Get dashboard",
        "operationId": "GetDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      },
      "delete": {
        "summary": "Delete dashboard",
        "operationId": "DeleteDashboard",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DashboardsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/invitations": {
      "get": {
        "summary": "Get organization invitation details",
        "operationId": "GetOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.user_email",
            "description": "Read-only User email.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.role",
            "description": "Role.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.created_at",
            "description": "Optional time when the entity was created.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "member.updated_at",
            "description": "Optional last time the entity was updated.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "delete": {
        "summary": "Delete organization invitation details",
        "operationId": "DeleteOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.user_email",
            "description": "Read-only User email.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.role",
            "description": "Role.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "member.created_at",
            "description": "Optional time when the entity was created.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "member.updated_at",
            "description": "Optional last time the entity was updated.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "put": {
        "summary": "Update organization invitation",
        "operationId": "UpdateOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "patch": {
        "summary": "Patch organization invitation",
        "operationId": "PatchOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/members": {
      "get": {
        "summary": "Get organization members",
        "operationId": "ListOrganizationMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationMembersResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "post": {
        "summary": "Create organization member",
        "operationId": "CreateOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/members/{member.user}": {
      "put": {
        "summary": "Update organization member",
        "operationId": "UpdateOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "patch": {
        "summary": "Patch organization member",
        "operationId": "PatchOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          {
            "name": "email",
            "description": "Optional email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/members/{user}": {
      "get": {
        "summary": "Get organization member details",
        "operationId": "GetOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "Memeber under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "delete": {
        "summary": "Delete organization member details",
        "operationId": "DeleteOrganizationMember",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "Memeber under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/models": {
      "get": {
        "summary": "List hub models",
        "operationId": "ListModelRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListModelRegistryResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ModelRegistryV1"
        ]
      },
      "post": {
        "summary": "Create hub model",
        "operationId": "CreateModelRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ModelRegistry"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Model body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ModelRegistry"
            }
          }
        ],
        "tags": [
          "ModelRegistryV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/models/names": {
      "get": {
        "summary": "List hub model names",
        "operationId": "ListModelRegistryNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListModelRegistryResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ModelRegistryV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/models/{model.uuid}": {
      "put": {
        "summary": "Update hub model",
        "operationId": "UpdateModelRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ModelRegistry"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Model body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ModelRegistry"
            }
          }
        ],
        "tags": [
          "ModelRegistryV1"
        ]
      },
      "patch": {
        "summary": "Patch hub model",
        "operationId": "PatchModelRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ModelRegistry"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Model body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ModelRegistry"
            }
          }
        ],
        "tags": [
          "ModelRegistryV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/models/{uuid}": {
      "get": {
        "summary": "Get hub model",
        "operationId": "GetModelRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ModelRegistry"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ModelRegistryV1"
        ]
      },
      "delete": {
        "summary": "Delete hub model",
        "operationId": "DeleteModelRegistry",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ModelRegistryV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/plan": {
      "post": {
        "summary": "Organization plan",
        "operationId": "OrganizationPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/presets": {
      "get": {
        "summary": "List scheduling presets",
        "operationId": "ListPresets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPresetsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      },
      "post": {
        "summary": "Create scheduling presets",
        "operationId": "CreatePreset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Preset body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/presets/names": {
      "get": {
        "summary": "List scheduling presets names",
        "operationId": "ListPresetNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPresetsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/presets/{preset.uuid}": {
      "put": {
        "summary": "Update scheduling preset",
        "operationId": "UpdatePreset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "preset.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Preset body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      },
      "patch": {
        "summary": "Patch scheduling preset",
        "operationId": "PatchPreset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "preset.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Preset body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/presets/{uuid}": {
      "get": {
        "summary": "Get scheduling preset",
        "operationId": "GetPreset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Preset"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      },
      "delete": {
        "summary": "Delete scheduling preset",
        "operationId": "DeletePreset",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PresetsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/queues": {
      "get": {
        "summary": "List organization level queues",
        "operationId": "ListOrganizationQueues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueuesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/queues/names": {
      "get": {
        "summary": "List organization level queues names",
        "operationId": "ListOrganizationQueueNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQueuesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "QueuesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/searches": {
      "get": {
        "summary": "List searches",
        "operationId": "ListSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSearchesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      },
      "post": {
        "summary": "Create search",
        "operationId": "CreateSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/searches/names": {
      "get": {
        "summary": "List search names",
        "operationId": "ListSearchNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSearchesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/searches/{search.uuid}": {
      "put": {
        "summary": "Update search",
        "operationId": "UpdateSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      },
      "patch": {
        "summary": "Patch search",
        "operationId": "PatchSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/searches/{uuid}": {
      "get": {
        "summary": "Get search",
        "operationId": "GetSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      },
      "delete": {
        "summary": "Delete search",
        "operationId": "DeleteSearch",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SearchesV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/settings": {
      "get": {
        "summary": "Get organization settings",
        "operationId": "GetOrganizationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "organization.user",
            "description": "User.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.user_email",
            "description": "Read-only User email.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.name",
            "description": "Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.is_public",
            "description": "Optional flag to tell if this organization is public.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "organization.created_at",
            "description": "Optional time when the entity was created.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "organization.updated_at",
            "description": "Optional last time the entity was updated.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "organization.role",
            "description": "Current user's role in this org.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.queue",
            "description": "Default queue.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization.preset",
            "description": "Default preset.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "put": {
        "summary": "Update organization settings",
        "operationId": "UpdateOrganizationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      },
      "patch": {
        "summary": "Patch oranization settings",
        "operationId": "PatchOrganizationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Organization body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          }
        ],
        "tags": [
          "OrganizationsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams": {
      "get": {
        "summary": "List teams",
        "operationId": "ListTeams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTeamsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "post": {
        "summary": "Create team",
        "operationId": "CreateTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/names": {
      "get": {
        "summary": "List teams names",
        "operationId": "ListTeamNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTeamsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{team.name}": {
      "put": {
        "summary": "Update team",
        "operationId": "UpdateTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team.name",
            "description": "Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "patch": {
        "summary": "Patch team",
        "operationId": "PatchTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team.name",
            "description": "Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}": {
      "get": {
        "summary": "Get team",
        "operationId": "GetTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Team"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "delete": {
        "summary": "Delete team",
        "operationId": "DeleteTeam",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}/members": {
      "get": {
        "summary": "Get team members",
        "operationId": "ListTeamMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTeamMembersResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "post": {
        "summary": "Create team member",
        "operationId": "CreateTeamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}/members/{member.user}": {
      "put": {
        "summary": "Update team member",
        "operationId": "UpdateTeamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "patch": {
        "summary": "Patch tram member",
        "operationId": "PatchTeamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "member.user",
            "description": "User",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Team body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/orgs/{owner}/teams/{team}/members/{user}": {
      "get": {
        "summary": "Get team member details",
        "operationId": "GetTeamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TeamMember"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "Member under team",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      },
      "delete": {
        "summary": "Delete team member details",
        "operationId": "DeleteTeamMember",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "team",
            "description": "Team under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "Member under team",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TeamsV1"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get current user",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "UsersV1"
        ]
      },
      "put": {
        "summary": "Update current user",
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      },
      "patch": {
        "summary": "Patch current user",
        "operationId": "PatchUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/users/tokens": {
      "get": {
        "summary": "List tokens",
        "operationId": "ListTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTokenResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UsersV1"
        ]
      },
      "post": {
        "summary": "Create token",
        "operationId": "CreateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/users/tokens/{token.uuid}": {
      "put": {
        "summary": "Update token",
        "operationId": "UpdateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "token.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      },
      "patch": {
        "summary": "Patch token",
        "operationId": "PatchToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "token.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Token body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/users/tokens/{uuid}": {
      "get": {
        "summary": "Get token",
        "operationId": "GetToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "UUid of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersV1"
        ]
      },
      "delete": {
        "summary": "Delete token",
        "operationId": "DeleteToken",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "UUid of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersV1"
        ]
      }
    },
    "/api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/copy": {
      "post": {
        "summary": "Restart run with copy",
        "operationId": "CopyRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity.owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity.project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity.uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/restart": {
      "post": {
        "summary": "Restart run",
        "operationId": "RestartRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity.owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity.project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity.uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/resume": {
      "post": {
        "summary": "Resume run",
        "operationId": "ResumeRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity.owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity.project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity.uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/projects/create": {
      "post": {
        "summary": "Create new project",
        "operationId": "CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/projects/list": {
      "get": {
        "summary": "List projects",
        "operationId": "ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/projects/names": {
      "get": {
        "summary": "List project names",
        "operationId": "ListProjectNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project.name}": {
      "put": {
        "summary": "Update project",
        "operationId": "UpdateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project.name",
            "description": "Required name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "patch": {
        "summary": "Patch project",
        "operationId": "PatchProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project.name",
            "description": "Required name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}": {
      "get": {
        "summary": "Get project",
        "operationId": "GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "delete": {
        "summary": "Delete project",
        "operationId": "DeleteProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/archive": {
      "post": {
        "summary": "Archive project",
        "operationId": "ArchiveProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/bookmark": {
      "post": {
        "summary": "Bookmark project",
        "operationId": "BookmarkProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/ci": {
      "delete": {
        "summary": "Disbale project CI",
        "operationId": "DisableProjectCI",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "post": {
        "summary": "Enable project CI",
        "operationId": "EnableProjectCI",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/dashboards": {
      "get": {
        "summary": "List project dashboards",
        "operationId": "ListProjectDashboards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDashboardsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      },
      "post": {
        "summary": "Create project dashboard",
        "operationId": "CreateProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/dashboards/names": {
      "get": {
        "summary": "List project dashboard",
        "operationId": "ListProjectDashboardNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDashboardsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/dashboards/{dashboard.uuid}": {
      "put": {
        "summary": "Update project dashboard",
        "operationId": "UpdateProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dashboard.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      },
      "patch": {
        "summary": "Patch project dashboard",
        "operationId": "PatchProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dashboard.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Dashboard body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/dashboards/{uuid}": {
      "get": {
        "summary": "Get project dashboard",
        "operationId": "GetProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Dashboard"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      },
      "delete": {
        "summary": "Delete project dashboard",
        "operationId": "DeleteProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/dashboards/{uuid}/promote": {
      "post": {
        "summary": "Promote project dashboard",
        "operationId": "PromoteProjectDashboard",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectDashboardsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/restore": {
      "post": {
        "summary": "Restore project",
        "operationId": "RestoreProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs": {
      "get": {
        "summary": "List runs",
        "operationId": "ListRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "post": {
        "summary": "Create new run",
        "operationId": "CreateRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "operation object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OperationBody"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/artifacts_lineage": {
      "get": {
        "summary": "Get runs artifacts lineage",
        "operationId": "GetRunsArtifactsLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunArtifactsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/bookmark": {
      "post": {
        "summary": "Bookmark runs",
        "operationId": "BookmarkRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/delete": {
      "delete": {
        "summary": "Delete runs",
        "operationId": "DeleteRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/invalidate": {
      "post": {
        "summary": "Invalidate runs",
        "operationId": "InvalidateRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/stop": {
      "post": {
        "summary": "Stop runs",
        "operationId": "StopRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Uuids of the entities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Uuids"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/tag": {
      "post": {
        "summary": "Tag runs",
        "operationId": "TagRuns",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntitiesTags"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{run.uuid}": {
      "put": {
        "summary": "Update run",
        "operationId": "UpdateRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "run.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "patch": {
        "summary": "Patch run",
        "operationId": "PatchRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "run.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}": {
      "get": {
        "summary": "Get run",
        "operationId": "GetRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Run"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "delete": {
        "summary": "Delete run",
        "operationId": "DeleteRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/archive": {
      "post": {
        "summary": "Archive run",
        "operationId": "ArchiveRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/artifacts_lineage": {
      "get": {
        "summary": "Get run artifacts lineage",
        "operationId": "GetRunArtifactsLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunArtifactsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Entity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "post": {
        "summary": "Create bulk run artifacts lineage",
        "operationId": "CreateRunArtifactsLineage",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Run Artifacts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RunArtifacts"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/artifacts_lineage/names": {
      "get": {
        "summary": "Get run artifacts lineage names",
        "operationId": "GetRunArtifactsLineageNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRunArtifactsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Entity uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/artifacts_lineage/{name}": {
      "get": {
        "summary": "Get run artifacts lineage",
        "operationId": "GetRunArtifactLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RunArtifact"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Artifact name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "delete": {
        "summary": "Delete run artifact lineage",
        "operationId": "DeleteRunArtifactLineage",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Artifact name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/bookmark": {
      "post": {
        "summary": "Bookmark run",
        "operationId": "BookmarkRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/impersonate": {
      "post": {
        "summary": "Impersonate run token",
        "operationId": "ImpersonateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Auth"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/invalidate": {
      "post": {
        "summary": "Invalidate run",
        "operationId": "InvalidateRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/namespace": {
      "get": {
        "summary": "Get Run namespace",
        "operationId": "GetRunNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RunSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/restore": {
      "post": {
        "summary": "Restore run",
        "operationId": "RestoreRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/settings": {
      "get": {
        "summary": "Get Run settings",
        "operationId": "GetRunSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RunSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/statuses": {
      "get": {
        "summary": "Get run statuses",
        "operationId": "GetRunStatuses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Status"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "post": {
        "summary": "Create new run status",
        "operationId": "CreateRunStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Status"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntityStatusBodyRequest"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/stop": {
      "post": {
        "summary": "Stop run",
        "operationId": "StopRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/tensorboard/start": {
      "post": {
        "summary": "Start run tensorboard",
        "operationId": "StartRunTensorboard",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectEntityResourceRequest"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/tensorboard/stop": {
      "post": {
        "summary": "Stop run tensorboard",
        "operationId": "StopRunTensorboard",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/unbookmark": {
      "delete": {
        "summary": "Unbookmark run",
        "operationId": "UnbookmarkRun",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/searches": {
      "get": {
        "summary": "List project searches",
        "operationId": "ListProjectSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSearchesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      },
      "post": {
        "summary": "Create project search",
        "operationId": "CreateProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/searches/names": {
      "get": {
        "summary": "List project search names",
        "operationId": "ListProjectSearchNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSearchesResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Limit size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort to order the search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query filter the search search.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/searches/{search.uuid}": {
      "put": {
        "summary": "Update project search",
        "operationId": "UpdateProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      },
      "patch": {
        "summary": "Patch project search",
        "operationId": "PatchProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search.uuid",
            "description": "UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Search body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/searches/{uuid}": {
      "get": {
        "summary": "Get project search",
        "operationId": "GetProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Search"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      },
      "delete": {
        "summary": "Delete project search",
        "operationId": "DeleteProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/searches/{uuid}/promote": {
      "post": {
        "summary": "Promote project search",
        "operationId": "PromoteProjectSearch",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectSearchesV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/settings": {
      "get": {
        "summary": "Get Project settings",
        "operationId": "GetProjectSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "put": {
        "summary": "Update project settings",
        "operationId": "UpdateProjectSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project settings body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "patch": {
        "summary": "Patch project settings",
        "operationId": "PatchProjectSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project settings body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectSettings"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/teams": {
      "get": {
        "summary": "Get project teams",
        "operationId": "FetchProjectTeams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectTeams"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "put": {
        "summary": "Update project teams",
        "operationId": "UpdateProjectTeams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectTeams"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project settings body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectTeams"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      },
      "patch": {
        "summary": "Patch project teams",
        "operationId": "PatchProjectTeams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectTeams"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Project settings body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProjectTeams"
            }
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/unbookmark": {
      "delete": {
        "summary": "Unbookmark project",
        "operationId": "UnbookmarkProject",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project under namesapce",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/schemas": {
      "get": {
        "summary": "Get random",
        "operationId": "NoOp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Schemas"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "SchemasV1"
        ]
      }
    },
    "/streams/v1/{namespace}/_internal/{owner}/{project}/runs/{uuid}/logs": {
      "post": {
        "summary": "Collect run logs",
        "operationId": "CollectRunLogs",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/multi/events/{kind}": {
      "get": {
        "summary": "Get multi runs events",
        "operationId": "GetMultiRunEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The artifact kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "model",
              "audio",
              "video",
              "histogram",
              "image",
              "tensor",
              "dataframe",
              "chart",
              "csv",
              "tsv",
              "psv",
              "ssv",
              "metric",
              "env",
              "html",
              "text",
              "file",
              "dir",
              "dockerfile",
              "docker_image",
              "data",
              "coderef",
              "table",
              "tensorboard",
              "curve"
            ]
          },
          {
            "name": "names",
            "description": "Names query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "runs",
            "description": "Runs query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orient",
            "description": "Orient query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifact": {
      "delete": {
        "summary": "Delete run artifact",
        "operationId": "DeleteRunArtifact",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Path query param.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "get": {
        "summary": "Get run artifact",
        "operationId": "GetRunArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the experiement will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Artifact filepath.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stream",
            "description": "Whether to stream the file.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "force",
            "description": "Whether to force reload.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts": {
      "delete": {
        "summary": "Delete run artifacts",
        "operationId": "DeleteRunArtifacts",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Path query param.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      },
      "get": {
        "summary": "Get run artifacts",
        "operationId": "GetRunArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the experiement will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Artifact filepath.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Whether to force reload.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree": {
      "get": {
        "summary": "Get run artifacts tree",
        "operationId": "GetRunArtifactsTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ArtifactTree"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "description": "Path query param.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/events/{kind}": {
      "get": {
        "summary": "Get run events",
        "operationId": "GetRunEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "description": "The artifact kind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "model",
              "audio",
              "video",
              "histogram",
              "image",
              "tensor",
              "dataframe",
              "chart",
              "csv",
              "tsv",
              "psv",
              "ssv",
              "metric",
              "env",
              "html",
              "text",
              "file",
              "dir",
              "dockerfile",
              "docker_image",
              "data",
              "coderef",
              "table",
              "tensorboard",
              "curve"
            ]
          },
          {
            "name": "names",
            "description": "Names query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orient",
            "description": "Orient query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/logs": {
      "get": {
        "summary": "Get run logs",
        "operationId": "GetRunLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Logs"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "last_time",
            "description": "last time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "last_file",
            "description": "last file.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/notify": {
      "post": {
        "summary": "Notify run status",
        "operationId": "NotifyRunStatus",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "Na,espace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EntityNotificationBody"
            }
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/resources": {
      "get": {
        "summary": "Get run resources events",
        "operationId": "GetRunResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EventsResponse"
            }
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project where the run will be assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Uuid identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "names",
            "description": "Names query param.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tail",
            "description": "Query param flag to tail the values.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "force",
            "description": "Force query param.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/catalogs/{owner}/artifacts/{uuid}/upload": {
      "post": {
        "summary": "Upload artifact to a store",
        "operationId": "UploadArtifact",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadfile",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file to upload."
          },
          {
            "name": "path",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "overwrite",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ArtifactsStoresV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/artifacts/{uuid}/upload": {
      "post": {
        "summary": "Upload artifact to a store via project access",
        "operationId": "UploadProjectArtifact",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project having access to the store",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadfile",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file to upload."
          },
          {
            "name": "path",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "overwrite",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/logs/upload": {
      "post": {
        "summary": "Upload a logs file to a store via run access",
        "operationId": "UploadRunLogs",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project having access to the store",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadfile",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file to upload."
          },
          {
            "name": "path",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "overwrite",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    },
    "/api/v1/{owner}/{project}/runs/{uuid}/artifacts/upload": {
      "post": {
        "summary": "Upload an artifact file to a store via run access",
        "operationId": "UploadRunArtifact",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "204": {
            "description": "No content.",
            "schema": {}
          },
          "403": {
            "description": "You don't have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Resource does not exist.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "Owner of the namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Project having access to the store",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Unique integer identifier of the entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadfile",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file to upload."
          },
          {
            "name": "path",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "overwrite",
            "description": "File path query params.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RunsV1"
        ]
      }
    }
  },
  "definitions": {
    "AgentStateResponseAgentState": {
      "type": "object",
      "properties": {
        "schedules": {
          "type": "object",
          "title": "List of schdules runs"
        },
        "notifier": {
          "type": "object",
          "title": "List of notifier runs"
        },
        "watchdogs": {
          "type": "object",
          "title": "List of watchdogs runs"
        },
        "tuners": {
          "type": "object",
          "title": "List of tuners runs"
        },
        "queued": {
          "type": "object",
          "title": "List of queued runs"
        },
        "stopping": {
          "type": "object",
          "title": "List of stopping runs"
        },
        "apply": {
          "type": "object",
          "title": "List of apply runs"
        },
        "full": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to tell the agent that the queues are still full"
        }
      }
    },
    "DashboardView": {
      "type": "string",
      "enum": [
        "any",
        "single",
        "compare"
      ],
      "default": "any",
      "description": "- any: Any view\n - single: Single run dashboard\n - compare: Compare runs dashboard",
      "title": "Dashboard view"
    },
    "SparkDeployMode": {
      "type": "string",
      "enum": [
        "cluster",
        "client",
        "in_cluster_client"
      ],
      "default": "cluster"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Action": {
      "type": "object",
      "properties": {
        "hub_ref": {
          "type": "string",
          "title": "Component name to use, if not provided Polyaxon will check the action name isntead"
        },
        "label": {
          "type": "string",
          "title": "UI label to use for the button, if not provided it will default to the component's hub reference"
        },
        "many": {
          "type": "string",
          "title": "A flag to tell if the action should be applied on a single or multiple runs"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Param"
          },
          "title": "Optional dict of params"
        },
        "run_patch": {
          "type": "object",
          "title": "Optional a run section to override  the content of the run in the template\nshould be one of: Job/Service/Spark/Flink/Kubeflow/Dask/Dag"
        }
      },
      "title": "Action defintion"
    },
    "v1Affinity": {
      "type": "object",
      "title": "Placeholder for Affinity"
    },
    "v1Agent": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional a flag to disable the agent"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace where the agent is deployed"
        },
        "version_api": {
          "type": "object",
          "title": "Optional version api"
        },
        "content": {
          "type": "string",
          "title": "Content of the agent config"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "The agent max concurrency"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "status": {
          "$ref": "#/definitions/v1Statuses",
          "title": "Optional latest status of this entity"
        },
        "settings": {
          "type": "object",
          "title": "Optional settings"
        }
      },
      "title": "Agent specification"
    },
    "v1AgentStateResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1Statuses"
        },
        "state": {
          "$ref": "#/definitions/AgentStateResponseAgentState"
        }
      },
      "title": "Contains the agents (queues/runs) state"
    },
    "v1AgentStatusBodyRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner of the namespace"
        },
        "uuid": {
          "type": "string",
          "title": "Uuid identifier of the entity"
        },
        "condition": {
          "$ref": "#/definitions/v1StatusCondition",
          "title": "Status to set"
        }
      },
      "title": "Request data to create/update agent status"
    },
    "v1ArtifactKind": {
      "type": "string",
      "enum": [
        "model",
        "audio",
        "video",
        "histogram",
        "image",
        "tensor",
        "dataframe",
        "chart",
        "csv",
        "tsv",
        "psv",
        "ssv",
        "metric",
        "env",
        "html",
        "text",
        "file",
        "dir",
        "dockerfile",
        "docker_image",
        "data",
        "coderef",
        "table",
        "tensorboard",
        "curve"
      ],
      "default": "model",
      "description": "- model: model\n - audio: audio\n - video: vidio\n - histogram: histogram\n - image: image\n - tensor: tensor\n - dataframe: dataframe\n - chart: plotly/bokeh/vega chart\n - csv: Comma\n - tsv: Tab\n - psv: Pipe\n - ssv: Space\n - metric: Metric\n - env: Env\n - html: HTML\n - text: Text\n - file: File\n - dir: Dir\n - dockerfile: Dockerfile\n - docker_image: docker image\n - data: data\n - coderef: coderef\n - table: table\n - tensorboard: tensorboard\n - curve: curve",
      "title": "Artifact kind"
    },
    "v1ArtifactTree": {
      "type": "object",
      "properties": {
        "files": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "dirs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "is_done": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "Artifact tree response"
    },
    "v1ArtifactsMount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the artifact(connection)"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Paths to mount"
        }
      },
      "title": "Artifact mount specification"
    },
    "v1ArtifactsType": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional files to initialize"
        },
        "dirs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional dirs to initialize"
        },
        "workers": {
          "type": "integer",
          "format": "int32",
          "title": "Optional number of concurrent threads to use"
        }
      },
      "title": "Artifacts type specification"
    },
    "v1Auth": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "token hash"
        }
      },
      "title": "Auth specification"
    },
    "v1AuthType": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "Optional user"
        },
        "password": {
          "type": "string",
          "title": "Optional password"
        }
      },
      "title": "Uri type specification"
    },
    "v1Bayes": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"bayes\"",
          "default": "bayes"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "num_initial_runs": {
          "type": "integer",
          "format": "int32",
          "title": "Number of intial random observations to create"
        },
        "num_iterations": {
          "type": "integer",
          "format": "int32",
          "title": "Number of iteration for producing new observations"
        },
        "utility_function": {
          "type": "object",
          "title": "A utility function to use for the bayesian optimization"
        },
        "metric": {
          "$ref": "#/definitions/v1OptimizationMetric",
          "title": "Metric to optimize during the iterations"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "early_stopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on Bayesian Optimization"
    },
    "v1BucketConnection": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string",
          "title": "Bucket"
        }
      },
      "title": "Bucket connection schema validation specification"
    },
    "v1Cache": {
      "type": "object",
      "properties": {
        "disable": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to disable cache, Cache is enabled by default"
        },
        "ttl": {
          "type": "integer",
          "format": "int32",
          "title": "Optional time to live for the cache before it gets invalidated automatically, \nthe TTL is caclculated based on the time the run starts"
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional Inputs' names to consider for the cache"
        }
      },
      "title": "Cache specification\nCache is calculated based on inputs state as well as component version if used"
    },
    "v1ClaimConnection": {
      "type": "object",
      "properties": {
        "volume_claim": {
          "type": "string",
          "title": "Claim name"
        },
        "mount_path": {
          "type": "string",
          "title": "Mount path"
        },
        "read_only": {
          "type": "boolean",
          "format": "boolean",
          "title": "Read Only"
        },
        "kind": {
          "default": "volume_claim"
        }
      },
      "title": "Claim connection schema validation specification"
    },
    "v1CleanPodPolicy": {
      "type": "string",
      "enum": [
        "All",
        "Running",
        "None"
      ],
      "default": "All",
      "title": "CleanPodPolicy"
    },
    "v1Cloning": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Optional uuid of the original run"
        },
        "name": {
          "type": "string",
          "title": "Optional name of the original run"
        },
        "kind": {
          "$ref": "#/definitions/v1CloningKind",
          "title": "Optional if this run was restarted/copied/resumed/cached"
        }
      }
    },
    "v1CloningKind": {
      "type": "string",
      "enum": [
        "copy",
        "restart",
        "cache",
        "schedule"
      ],
      "default": "copy"
    },
    "v1Compatibility": {
      "type": "object",
      "properties": {
        "cli": {
          "$ref": "#/definitions/v1Version"
        },
        "platform": {
          "$ref": "#/definitions/v1Version"
        },
        "agent": {
          "$ref": "#/definitions/v1Version"
        },
        "ui": {
          "$ref": "#/definitions/v1Version"
        }
      }
    },
    "v1CompiledOperation": {
      "type": "object",
      "properties": {
        "version": {
          "type": "number",
          "format": "float",
          "title": "Spec version"
        },
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"operation\""
        },
        "name": {
          "type": "string",
          "title": "Optional component name, should a valid slug"
        },
        "description": {
          "type": "string",
          "title": "Optional component description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional component tags"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional presets to use for running this component"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to use for running this component"
        },
        "cache": {
          "$ref": "#/definitions/v1Cache",
          "title": "Optional flag to disable cache validation and force run this component"
        },
        "termination": {
          "$ref": "#/definitions/v1Termination",
          "title": "optional termination section"
        },
        "plugins": {
          "$ref": "#/definitions/v1Plugins",
          "title": "Optional plugins to enable"
        },
        "schedule": {
          "type": "object",
          "title": "Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional events section, must be a valid List of Event option (Git/Alert/Webhook/Dataset)"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Action"
          },
          "title": "Optional actions section"
        },
        "hooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Hook"
          },
          "title": "Optional hooks section"
        },
        "matrix": {
          "type": "object",
          "title": "Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional graph dependencies of this op"
        },
        "trigger": {
          "$ref": "#/definitions/v1TriggerPolicy",
          "title": "Optional trigger policy"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "An optional list of condition to check before starting the run, entities should be a valid Condition"
        },
        "skip_on_upstream_skip": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to skip this run if upstream was skipped"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IO"
          },
          "title": "Optional inputs definition"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IO"
          },
          "title": "Optional outputs definition"
        },
        "run": {
          "type": "object",
          "title": "Run definiton, should be one of run composition: Container/Spark/Flink/Kubeflow/Dask/Dag"
        }
      },
      "title": "CompiledOperation specification"
    },
    "v1Component": {
      "type": "object",
      "properties": {
        "version": {
          "type": "number",
          "format": "float",
          "title": "Spec version"
        },
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"operation\""
        },
        "name": {
          "type": "string",
          "title": "Optional component name, should be a valid fully qualified value: name[:version]"
        },
        "description": {
          "type": "string",
          "title": "Optional component description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional component tags"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional presets to use for running this component"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to use for running this component"
        },
        "cache": {
          "$ref": "#/definitions/v1Cache",
          "title": "Optional flag to disable cache validation and force run this component"
        },
        "termination": {
          "$ref": "#/definitions/v1Termination",
          "title": "optional termination section"
        },
        "plugins": {
          "$ref": "#/definitions/v1Plugins",
          "title": "Optional plugins to enable"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Action"
          },
          "title": "Optional actions section"
        },
        "hooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Hook"
          },
          "title": "Optional hooks section"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IO"
          },
          "title": "Optional inputs definition"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IO"
          },
          "title": "Optional outputs definition"
        },
        "run": {
          "type": "object",
          "title": "Run definition, should be one of: Job/Service/Spark/Flink/Kubeflow/Dask/Dag"
        },
        "template": {
          "$ref": "#/definitions/v1Template",
          "title": "Optional flag to mark this specification as template"
        }
      },
      "title": "Component specification"
    },
    "v1ComponentHub": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Optional component name, should be a valid fully qualified value: name[:version]"
        },
        "content": {
          "type": "string",
          "title": "The Component body content"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional a flag to disable the model"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "component hub specification"
    },
    "v1ConnectionKind": {
      "type": "string",
      "enum": [
        "host_path",
        "volume_claim",
        "gcs",
        "s3",
        "wasb",
        "registry",
        "git",
        "aws",
        "gcp",
        "azure",
        "mysql",
        "postgres",
        "oracle",
        "vertica",
        "sqlite",
        "mssql",
        "redis",
        "presto",
        "mongo",
        "cassandra",
        "ftp",
        "grpc",
        "hdfs",
        "http",
        "pig_cli",
        "hive_cli",
        "hive_metastore",
        "hive_server2",
        "jdbc",
        "jenkins",
        "samba",
        "snowflake",
        "ssh",
        "cloudant",
        "databricks",
        "segment",
        "slack",
        "discord",
        "mattermost",
        "pagerduty",
        "hipchat",
        "webhook",
        "custom"
      ],
      "default": "host_path",
      "title": "Connection kinds"
    },
    "v1ConnectionResponse": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "agent": {
          "type": "string",
          "title": "Agent"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional a flag to disable the store"
        },
        "kind": {
          "$ref": "#/definitions/v1ConnectionKind",
          "title": "The connection kind"
        }
      },
      "title": "Connection specification"
    },
    "v1ConnectionSchema": {
      "type": "object",
      "properties": {
        "bucket_connection": {
          "$ref": "#/definitions/v1BucketConnection"
        },
        "host_path_connection": {
          "$ref": "#/definitions/v1HostPathConnection"
        },
        "claim_connection": {
          "$ref": "#/definitions/v1ClaimConnection"
        },
        "host_connection": {
          "$ref": "#/definitions/v1HostConnection"
        },
        "git_connection": {
          "$ref": "#/definitions/v1GitConnection"
        }
      }
    },
    "v1ConnectionType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Connection name"
        },
        "description": {
          "type": "string",
          "title": "Optional connection description"
        },
        "tags": {
          "type": "string",
          "title": "Optional connection tags"
        },
        "kind": {
          "$ref": "#/definitions/v1ConnectionKind",
          "title": "Connection kind"
        },
        "schema": {
          "type": "object",
          "title": "The connection schema should be a valid ConnectionSchema"
        },
        "secret": {
          "$ref": "#/definitions/v1K8sResourceSchema",
          "title": "Secret resource schema"
        },
        "config_map": {
          "$ref": "#/definitions/v1K8sResourceSchema",
          "title": "ConfigMap resource schema"
        }
      }
    },
    "v1Container": {
      "type": "object",
      "title": "Placeholder for Container"
    },
    "v1Credentials": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "User username or email"
        },
        "password": {
          "type": "string",
          "title": "User password"
        }
      },
      "title": "Login"
    },
    "v1CronSchedule": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of schedule, should be equal to \"cron\"",
          "default": "cron"
        },
        "start_at": {
          "type": "string",
          "format": "date-time",
          "title": "Whan to start this cron schedule"
        },
        "end_at": {
          "type": "string",
          "format": "date-time",
          "title": "Whan to end this cron schedule"
        },
        "cron": {
          "type": "string",
          "title": "Cron definition, e.g. 0 1 * * *"
        },
        "depends_on_past": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to set a dependency on past executions"
        }
      },
      "title": "Cron schedule specification"
    },
    "v1Dag": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"dag\"",
          "default": "dag"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Operation"
          },
          "title": "Ops used in the graph"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Component"
          },
          "title": "Optional component refrences"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Optional component description"
        },
        "early_stopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Optional component tags"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "description": "Volumes is a list of volumes that can be mounted."
        }
      },
      "title": "Dag specificaiton"
    },
    "v1DagRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of reference, should be equal to \"dag_ref\"",
          "default": "dag_ref"
        },
        "name": {
          "type": "string",
          "title": "Value"
        }
      },
      "title": "Dag reference specification"
    },
    "v1Dashboard": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Optional name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional a flag to disable the store"
        },
        "view": {
          "$ref": "#/definitions/DashboardView",
          "title": "Optional dashboard level"
        },
        "spec": {
          "type": "object",
          "title": "Optional dashboard specification"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Dashboard specification"
    },
    "v1Dask": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"Dask\"",
          "default": "dask"
        },
        "threads": {
          "type": "integer",
          "format": "int32",
          "title": "Number of threads"
        },
        "scale": {
          "type": "integer",
          "format": "int32",
          "title": "Number of workers"
        },
        "adapt_min": {
          "type": "integer",
          "format": "int32",
          "title": "Adaptive config min workers"
        },
        "adapt_max": {
          "type": "integer",
          "format": "int32",
          "title": "Adaptive config max workers"
        },
        "adapt_interval": {
          "type": "string",
          "title": "Adaptive config interval"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "description": "Volumes is a list of volumes that can be mounted."
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections/containers section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to run"
        }
      },
      "title": "Dask specification"
    },
    "v1DiffStoppingPolicy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this stopping policy, should be equal to \"average\""
        },
        "percent": {
          "type": "number",
          "format": "float",
          "title": "The diff factor, if not given than a zero tolerance policy is applied"
        },
        "evaluation_interval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval/Frequency for applying the policy."
        },
        "min_interval": {
          "type": "integer",
          "format": "int32",
          "title": "Min interval (e.g steps) before starting the process"
        },
        "min_samples": {
          "type": "integer",
          "format": "int32",
          "title": "Min samples runs succeeded before starting the process"
        }
      },
      "description": "Early stopping with diff factor stopping, this policy computes checks runs against the best run\nand stops those whose performance is worse than the best by the factor defined by the user."
    },
    "v1DockerfileType": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "title": "Docker image to use as a base"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "An optional list of tuples(key, value) for defining env vars, translate to an ENV statements"
        },
        "path": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "An optional list of tuples for exporting paths, translate to a PATH statements"
        },
        "copy": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "An optional list of tuples for copying paths, translate to a COPY statements"
        },
        "run": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An optional list of strubg for executing Run commands, translate to a RUN statements"
        },
        "lang_env": {
          "type": "string",
          "title": "An optional string defining a language, e.g. en_US.UTF-8"
        },
        "uid": {
          "type": "integer",
          "format": "int32",
          "title": "A uid to use when creating the docker image"
        },
        "gid": {
          "type": "integer",
          "format": "int32",
          "title": "A gid to use when creating the docker image"
        },
        "filename": {
          "type": "string",
          "title": "A filename to give to the generated dockerfile"
        },
        "workdir": {
          "type": "string",
          "title": "A work dir to copy code to, default to /code"
        },
        "workdir_path": {
          "type": "string",
          "title": "An optional workdir path"
        },
        "shell": {
          "type": "string",
          "title": "An optional shell type, defaults to \"/bin/bash\""
        }
      },
      "title": "Dockerfile type specification"
    },
    "v1EarlyStopping": {
      "type": "object",
      "properties": {
        "median": {
          "$ref": "#/definitions/v1MedianStoppingPolicy"
        },
        "diff": {
          "$ref": "#/definitions/v1DiffStoppingPolicy"
        },
        "truncation": {
          "$ref": "#/definitions/v1TruncationStoppingPolicy"
        },
        "metric": {
          "$ref": "#/definitions/v1MetricEarlyStopping"
        },
        "failure": {
          "$ref": "#/definitions/v1FailureEarlyStopping"
        }
      },
      "title": "All Schemas message"
    },
    "v1EntitiesTags": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1EntityNotificationBody": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Na,espace"
        },
        "owner": {
          "type": "string",
          "title": "Owner of the namespace"
        },
        "project": {
          "type": "string",
          "title": "Project where the run will be assigned"
        },
        "uuid": {
          "type": "string",
          "title": "Uuid identifier of the entity"
        },
        "name": {
          "type": "string",
          "title": "Optional name of the entity"
        },
        "condition": {
          "$ref": "#/definitions/v1StatusCondition",
          "title": "Status condition"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Connections to notify"
        }
      },
      "title": "Request data to create/update entity status"
    },
    "v1EntityStatusBodyRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner of the namespace"
        },
        "project": {
          "type": "string",
          "title": "Project where the run will be assigned"
        },
        "uuid": {
          "type": "string",
          "title": "Uuid identifier of the entity"
        },
        "condition": {
          "$ref": "#/definitions/v1StatusCondition",
          "title": "Status to set"
        }
      },
      "title": "Request data to create/update entity status"
    },
    "v1Environment": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional Metadata labels to pass to the k8s"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional Metadata annotations to pass to the k8s"
        },
        "node_selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
        },
        "affinity": {
          "$ref": "#/definitions/v1Affinity",
          "description": "Optional Affinity sets the scheduling constraints."
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Toleration"
          },
          "description": "Optional Tolerations to apply."
        },
        "node_name": {
          "type": "string",
          "description": "Optional NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements."
        },
        "service_account_name": {
          "type": "string",
          "title": "Optional service account name to use for this run"
        },
        "host_aliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1HostAlias"
          },
          "description": "Optional HostAliases is an optional list of hosts and IPs that will be injected into the pod spec."
        },
        "security_context": {
          "$ref": "#/definitions/v1PodSecurityContext",
          "description": "PodSecurityContext holds pod-level security attributes and common container settings.\nSome fields are also present in container.securityContext.  Field values of\ncontainer.securityContext take precedence over field values of PodSecurityContext."
        },
        "image_pull_secrets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional image pull secrets to use for this run\nImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images\nin pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets\ncan be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.\nMore info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod"
        },
        "host_network": {
          "type": "boolean",
          "format": "boolean",
          "description": "Host networking requested for this workflow pod. Default to false."
        },
        "hostPID": {
          "type": "string",
          "description": "Use the host's pid namespace. Default to false."
        },
        "dns_policy": {
          "type": "string",
          "description": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'."
        },
        "dns_config": {
          "$ref": "#/definitions/v1PodDNSConfig",
          "description": "PodDNSConfig defines the DNS parameters of a pod in addition to\nthose generated from DNSPolicy."
        },
        "scheduler_name": {
          "type": "string",
          "title": "If specified, the pod will be dispatched by specified scheduler.\nOr it will be dispatched by workflow scope scheduler if specified.\nIf neither specified, the pod will be dispatched by default scheduler.\n+optional"
        },
        "priority_class_name": {
          "type": "string",
          "description": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority."
        },
        "restart_policy": {
          "type": "string",
          "title": "A valid restart policy"
        }
      },
      "title": "Environment specification"
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "step": {
          "type": "integer",
          "format": "int32",
          "description": "Global step of the event."
        },
        "metric": {
          "type": "number",
          "format": "float"
        },
        "image": {
          "$ref": "#/definitions/v1EventImage"
        },
        "histogram": {
          "$ref": "#/definitions/v1EventHistogram"
        },
        "audio": {
          "$ref": "#/definitions/v1EventAudio"
        },
        "video": {
          "$ref": "#/definitions/v1EventVideo"
        },
        "html": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "chart": {
          "$ref": "#/definitions/v1EventChart"
        },
        "model": {
          "$ref": "#/definitions/v1EventModel"
        },
        "artifact": {
          "$ref": "#/definitions/v1EventArtifact"
        },
        "dataframe": {
          "$ref": "#/definitions/v1EventDataframe"
        },
        "curve": {
          "$ref": "#/definitions/v1EventCurve"
        }
      },
      "title": "Event spec definition"
    },
    "v1EventArtifact": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/v1ArtifactKind",
          "title": "Artifact kind"
        },
        "path": {
          "type": "string",
          "title": "Filepath"
        }
      },
      "title": "Artifact spec definition"
    },
    "v1EventAudio": {
      "type": "object",
      "properties": {
        "sample_rate": {
          "type": "number",
          "format": "float",
          "description": "Sample rate of the audio in Hz."
        },
        "num_channels": {
          "type": "integer",
          "format": "int32",
          "description": "Number of channels of audio."
        },
        "length_frames": {
          "type": "integer",
          "format": "int32",
          "description": "Length of the audio in frames (samples per channel)."
        },
        "content_type": {
          "type": "string",
          "title": "Content type of the audio"
        },
        "path": {
          "type": "string",
          "title": "/ Filepath"
        }
      },
      "title": "Audio spec definition"
    },
    "v1EventChart": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/v1EventChartKind",
          "title": "Chart kind"
        },
        "figure": {
          "type": "object",
          "title": "Figure json object"
        }
      },
      "title": "Chart spec definition"
    },
    "v1EventChartKind": {
      "type": "string",
      "enum": [
        "plotly",
        "bokeh",
        "vega"
      ],
      "default": "plotly",
      "description": "- plotly: Plotly chart\n - bokeh: Bokeh chart\n - vega: Vega chart",
      "title": "Chart kind"
    },
    "v1EventCurve": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/v1EventCurveKind",
          "title": "Curve kind"
        },
        "x": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "title": "X"
        },
        "y": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "title": "Y"
        },
        "annotation": {
          "type": "string",
          "title": "Annotation"
        }
      },
      "title": "Custom Curve spec definition"
    },
    "v1EventCurveKind": {
      "type": "string",
      "enum": [
        "roc",
        "pr",
        "custom"
      ],
      "default": "roc",
      "description": "- roc: ROC curve\n - pr: Precision Recall curve\n - custom: Custom curve",
      "title": "Curve kind"
    },
    "v1EventDataframe": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Filepath"
        },
        "content_type": {
          "type": "string",
          "title": "Format"
        }
      },
      "title": "Dataframe spec definition"
    },
    "v1EventHistogram": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "counts": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "title": "Histogram spec definition"
    },
    "v1EventImage": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the image."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image."
        },
        "colorspace": {
          "type": "integer",
          "format": "int32",
          "title": "Valid colorspace values are\n  1 - grayscale\n  2 - grayscale + alpha\n  3 - RGB\n  4 - RGBA\n  5 - DIGITAL_YUV\n  6 - BGRA"
        },
        "path": {
          "type": "string",
          "title": "Filepath"
        }
      },
      "title": "Image spec definition"
    },
    "v1EventModel": {
      "type": "object",
      "properties": {
        "framework": {
          "type": "string",
          "title": "Model framwork"
        },
        "path": {
          "type": "string",
          "title": "Filepath"
        },
        "spec": {
          "type": "object",
          "title": "Model spec (a dictionnary defnining the requirement for the model)"
        }
      },
      "title": "Model spec definition"
    },
    "v1EventType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the event"
        },
        "kind": {
          "$ref": "#/definitions/v1ArtifactKind",
          "title": "Type of the event"
        }
      },
      "title": "Event type specification"
    },
    "v1EventVideo": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the video."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the video."
        },
        "colorspace": {
          "type": "integer",
          "format": "int32",
          "title": "Valid colorspace values are\n  1 - grayscale\n  2 - grayscale + alpha\n  3 - RGB\n  4 - RGBA\n  5 - DIGITAL_YUV\n  6 - BGRA"
        },
        "path": {
          "type": "string",
          "title": "Filepath"
        },
        "content_type": {
          "type": "string",
          "title": "Content type of the video"
        }
      },
      "title": "Video spec definition"
    },
    "v1EventsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Events data"
        }
      },
      "title": "Events response definition"
    },
    "v1ExactTimeSchedule": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of schedule, should be equal to \"exact_time\"",
          "default": "exact_time"
        },
        "start_at": {
          "type": "string",
          "format": "date-time",
          "title": "Whan to start this cron schedule"
        }
      },
      "title": "Exact time schedule specification"
    },
    "v1FailureEarlyStopping": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this metric early stopping policy, should be equal to \"failure_early_stopping\"",
          "default": "failure_early_stopping"
        },
        "percent": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of failed runs, at each evaluation interval.\ne.g. 1 - 99."
        }
      },
      "description": "FailureEarlyStoppingSchema specification\nEarly stopping based on failure config.\nthis policy stops based on a percentage of\nfailed runs at every evaluation."
    },
    "v1Flink": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of runtime, should be equal to \"flink\"",
          "default": "flink"
        },
        "spec": {
          "type": "object",
          "title": "Flink specification"
        }
      },
      "title": "Flink specification"
    },
    "v1GcsType": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string",
          "title": "Optional container"
        },
        "blob": {
          "type": "string",
          "title": "Optional storage_account"
        }
      },
      "title": "Wasb type specification"
    },
    "v1GitConnection": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "Url"
        },
        "revision": {
          "type": "boolean",
          "format": "boolean",
          "title": "revision"
        }
      },
      "title": "Git connection schema validation connection"
    },
    "v1GitType": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "Optional Url"
        },
        "revision": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional revision"
        }
      },
      "title": "Git type specification, url or a connection is required"
    },
    "v1GridSearch": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"grid\"",
          "default": "grid"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "num_runs": {
          "type": "integer",
          "format": "int32",
          "title": "Number of runs to generate and search"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "early_stopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on grid/cartesian product generated search space"
    },
    "v1Hook": {
      "type": "object",
      "properties": {
        "hub_ref": {
          "type": "string",
          "title": "Component name to use, if not provided Polyaxon will check the action name isntead"
        },
        "trigger": {
          "$ref": "#/definitions/v1HookTrigger",
          "title": "Optional trigger policy, default done"
        },
        "connection": {
          "type": "string",
          "title": "Connection to use for notification"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Param"
          },
          "title": "Optional dict of params"
        },
        "run_patch": {
          "type": "object",
          "title": "Optional a run section to override  the content of the run in the template\nshould be one of: Job/Service/Spark/Flink/Kubeflow/Dask/Dag"
        }
      },
      "title": "Hook defintion"
    },
    "v1HookTrigger": {
      "type": "string",
      "enum": [
        "succeeded",
        "failed",
        "stopped",
        "done"
      ],
      "default": "succeeded",
      "title": "NotificationTrigger enum"
    },
    "v1HostAlias": {
      "type": "object",
      "title": "Placeholder for HostAlias"
    },
    "v1HostConnection": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "Url"
        },
        "insecure": {
          "type": "boolean",
          "format": "boolean",
          "title": "insecure"
        }
      },
      "title": "Host connection schema validation connection"
    },
    "v1HostPathConnection": {
      "type": "object",
      "properties": {
        "host_path": {
          "type": "string",
          "title": "host path"
        },
        "mount_path": {
          "type": "string",
          "title": "Mount path"
        },
        "read_only": {
          "type": "boolean",
          "format": "boolean",
          "title": "Read Only"
        },
        "kind": {
          "default": "host_path"
        }
      },
      "title": "Host path connection schema validation specification"
    },
    "v1HpChoice": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"choice\"",
          "default": "choice"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Choice specification"
    },
    "v1HpGeomSpace": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"geomspace\"",
          "default": "geomspace"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Geom Space specification"
    },
    "v1HpLinSpace": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"linspace\"",
          "default": "linspace"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Linear Space specification"
    },
    "v1HpLogNormal": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"lognormal\"",
          "default": "lognormal"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Log Normal Dist specification"
    },
    "v1HpLogSpace": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"logspace\"",
          "default": "logspace"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Log Space specification"
    },
    "v1HpLogUniform": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"loguniform\"",
          "default": "loguniform"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Log Uniform Dist specification"
    },
    "v1HpNormal": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"normal\"",
          "default": "normal"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Normal Dist specification"
    },
    "v1HpPChoice": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"pchoice\"",
          "default": "pchoice"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Probabilistic Choice specification"
    },
    "v1HpParams": {
      "type": "object",
      "properties": {
        "choice": {
          "$ref": "#/definitions/v1HpChoice"
        },
        "pchoice": {
          "$ref": "#/definitions/v1HpPChoice"
        },
        "range": {
          "$ref": "#/definitions/v1HpRange"
        },
        "linspace": {
          "$ref": "#/definitions/v1HpLinSpace"
        },
        "logspace": {
          "$ref": "#/definitions/v1HpLogSpace"
        },
        "geomspace": {
          "$ref": "#/definitions/v1HpGeomSpace"
        },
        "uniform": {
          "$ref": "#/definitions/v1HpUniform"
        },
        "quniform": {
          "$ref": "#/definitions/v1HpQUniform"
        },
        "loguniform": {
          "$ref": "#/definitions/v1HpLogUniform"
        },
        "qloguniform": {
          "$ref": "#/definitions/v1HpQLogUniform"
        },
        "normal": {
          "$ref": "#/definitions/v1HpNormal"
        },
        "qnormal": {
          "$ref": "#/definitions/v1HpQNormal"
        },
        "lognormal": {
          "$ref": "#/definitions/v1HpLogNormal"
        },
        "qlognormal": {
          "$ref": "#/definitions/v1HpQLogNormal"
        }
      },
      "title": "Hp Matrix specification"
    },
    "v1HpQLogNormal": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"qlognormal\"",
          "default": "qlognormal"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Quantized Log Normal Dist specification"
    },
    "v1HpQLogUniform": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"qloguniform\"",
          "default": "qloguniform"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Quantized Log Uniform Dist specification"
    },
    "v1HpQNormal": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"qnormal\"",
          "default": "qnormal"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Quantized Normal Dist specification"
    },
    "v1HpQUniform": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"quniform\"",
          "default": "quniform"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Quantized Uniform Dist specification"
    },
    "v1HpRange": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"range\"",
          "default": "range"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Range specification"
    },
    "v1HpUniform": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of hp, should be equal to \"uniform\"",
          "default": "uniform"
        },
        "value": {
          "type": "object",
          "title": "Value"
        }
      },
      "title": "HP Uniform Dist specification"
    },
    "v1HubRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of reference, should be equal to \"hub_ref\"",
          "default": "hub_ref"
        },
        "name": {
          "type": "string",
          "title": "Value"
        }
      },
      "title": "Hub reference specification"
    },
    "v1Hyperband": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"hyperband\"",
          "default": "hyperband"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "max_iterations": {
          "type": "integer",
          "format": "int32",
          "title": "Max iteration"
        },
        "eta": {
          "type": "integer",
          "format": "int32",
          "title": "Eta"
        },
        "resource": {
          "$ref": "#/definitions/v1OptimizationResource",
          "title": "Resource to optimize (should be an integer or a float)"
        },
        "metric": {
          "$ref": "#/definitions/v1OptimizationMetric",
          "title": "Metric to optimize during the iterations"
        },
        "resume": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to resume or restart the selected runs"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "early_stopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on hyperband"
    },
    "v1Hyperopt": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"hyperopt\"",
          "default": "hyperopt"
        },
        "algorithm": {
          "$ref": "#/definitions/v1HyperoptAlgorithms",
          "title": "Algorithm to use from the hyperopt library"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "num_runs": {
          "type": "integer",
          "format": "int32",
          "title": "Number of runs to generate and search"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "early_stopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on hyperopt"
    },
    "v1HyperoptAlgorithms": {
      "type": "string",
      "enum": [
        "tpe",
        "rand",
        "anneal"
      ],
      "default": "tpe",
      "description": "- tpe: tpe algorithm\n - rand: random algorithm\n - anneal: anneal algorithm",
      "title": "Hyperopt algorithms enum"
    },
    "v1IO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name for the input/output"
        },
        "description": {
          "type": "string",
          "title": "Description for the input/output"
        },
        "iotype": {
          "type": "string",
          "title": "The type of the input/output"
        },
        "value": {
          "type": "object",
          "title": "The value of the input/output should be compatible with the type"
        },
        "is_optional": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to tell if this input/output is optional"
        },
        "is_list": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to tell if this input/output is list"
        },
        "is_flag": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to tell if this input/output is flag, only valid for bool type"
        },
        "arg_format": {
          "type": "string",
          "title": "An optional argFromat of the input/output to be used instead of passing the value as is"
        },
        "delay_validation": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to tell if param validation for this input/output should be delayed"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "An optional field to provide possible values for validation"
        },
        "connection": {
          "type": "string",
          "title": "A flag to signal to Polyaxon that this io is used with a connection"
        },
        "to_init": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to signal to Polyaxon that this io must be tranformed to an init container"
        }
      },
      "title": "Inputs/Outputs specification"
    },
    "v1Init": {
      "type": "object",
      "properties": {
        "artifacts": {
          "$ref": "#/definitions/v1ArtifactsType",
          "title": "Override Schema for artifacts/mounts connections"
        },
        "git": {
          "$ref": "#/definitions/v1GitType",
          "title": "Override for git connections"
        },
        "dockerfile": {
          "$ref": "#/definitions/v1DockerfileType",
          "title": "Schema of the dockerfile to init"
        },
        "connection": {
          "type": "string",
          "title": "Optional, revision to pull"
        },
        "path": {
          "type": "string",
          "title": "Optional context path, the path to mount to main the container"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Container to use"
        }
      },
      "title": "Artifacts initializer specification"
    },
    "v1Installation": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "dist": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "hmac": {
          "type": "string"
        },
        "auth": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1IntervalSchedule": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of schedule, should be equal to \"interval\"",
          "default": "interval"
        },
        "start_at": {
          "type": "string",
          "format": "date-time",
          "title": "When to start this interval schedule"
        },
        "end_at": {
          "type": "string",
          "format": "date-time",
          "title": "Whan to end this interval schedule"
        },
        "frequency": {
          "type": "integer",
          "format": "int32",
          "title": "Frequency at which to execute the runs"
        },
        "depends_on_past": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to set a dependency on past executions"
        }
      },
      "title": "Interval schedule specification"
    },
    "v1IoCond": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of condition, should be equal to \"io\""
        },
        "param": {
          "type": "string",
          "title": "Param to condition on: e.g. builds.outputs.param1"
        },
        "trigger": {
          "type": "string",
          "title": "Trigger to check, trigger condition must conform to the iotype, e.g. value condition: v1|v2|V3"
        }
      },
      "title": "Input condition specification"
    },
    "v1Iterative": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"iterative\"",
          "default": "iterative"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "num_iterations": {
          "type": "integer",
          "format": "int32",
          "title": "Number of iterations to run"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Container specification for crating new observations based on data from previous iterations"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "early_stopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on a custom iterative algorithm (suggestions -> mapping -> reduce -> repeat)"
    },
    "v1Job": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"job\"",
          "default": "job"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "description": "Volumes is a list of volumes that can be mounted."
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections/containers section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to run"
        }
      },
      "title": "Job specification"
    },
    "v1K8sResourceSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "mount_path": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "K8S resource schema validation"
    },
    "v1K8sResourceType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the resource"
        },
        "schema": {
          "$ref": "#/definitions/v1K8sResourceSchema",
          "title": "The connection schema should be a valid ConnectionSchema"
        },
        "is_requested": {
          "type": "boolean",
          "format": "boolean",
          "title": "Option if the config resource is requested"
        }
      },
      "title": "K8S resource specification"
    },
    "v1KFReplica": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Number of replicas"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "title": "Optional connections section"
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to run"
        }
      },
      "title": "Distributed Replica specification"
    },
    "v1ListAgentsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Agent"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list agents"
    },
    "v1ListBookmarksResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list of bookmarks"
    },
    "v1ListComponentHubsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ComponentHub"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list component hub"
    },
    "v1ListConnectionsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ConnectionResponse"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list connections"
    },
    "v1ListDashboardsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Dashboard"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list dashboards"
    },
    "v1ListModelRegistryResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ModelRegistry"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list model registries"
    },
    "v1ListOrganizationMembersResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OrganizationMember"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list organization members"
    },
    "v1ListOrganizationsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Organization"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list organizations"
    },
    "v1ListPresetsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Preset"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list scheduling presets"
    },
    "v1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Project"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list projects"
    },
    "v1ListQueuesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Queue"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list agents"
    },
    "v1ListRunArtifactsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunArtifact"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list run artifacts"
    },
    "v1ListRunsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Run"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list runs"
    },
    "v1ListSearchesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Search"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list searches"
    },
    "v1ListTeamMembersResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1TeamMember"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list organization members"
    },
    "v1ListTeamsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Team"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list teams"
    },
    "v1ListTokenResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of the entities"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Token"
          },
          "title": "List of all entities"
        },
        "previous": {
          "type": "string",
          "title": "Previous page"
        },
        "next": {
          "type": "string",
          "title": "Next page"
        }
      },
      "title": "Contains list tokens"
    },
    "v1Log": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "node": {
          "type": "string",
          "title": "Node name"
        },
        "pod": {
          "type": "string",
          "title": "Pod name"
        },
        "container": {
          "type": "string",
          "title": "Container id"
        },
        "value": {
          "type": "string",
          "title": "Log line"
        }
      },
      "title": "Log spec definition"
    },
    "v1LogHandler": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        }
      }
    },
    "v1Logs": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Log"
          },
          "title": "Log lines"
        },
        "last_time": {
          "type": "string",
          "format": "date-time",
          "title": "Last log time"
        },
        "last_file": {
          "type": "string",
          "title": "Last log file"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Log files"
        }
      },
      "title": "Logs"
    },
    "v1MPIJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"mpi_job\"",
          "default": "mpi_job"
        },
        "cleanPodPolicy": {
          "$ref": "#/definitions/v1CleanPodPolicy",
          "title": "optional clean pod policy section"
        },
        "slots_per_worker": {
          "type": "integer",
          "format": "int32",
          "title": "Optional slots per worker"
        },
        "launcher": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Optional launcher replica definition"
        },
        "worker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Optional worker replica definition"
        }
      },
      "title": "MPI Job specification"
    },
    "v1Mapping": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"mapping\"",
          "default": "mapping"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "The mapping values"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "early_stopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stopping objects, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on map/array either specified manually by the user or passed from another step"
    },
    "v1Matrix": {
      "type": "object",
      "properties": {
        "random": {
          "$ref": "#/definitions/v1RandomSearch"
        },
        "grid": {
          "$ref": "#/definitions/v1GridSearch"
        },
        "hyperband": {
          "$ref": "#/definitions/v1Hyperband"
        },
        "bayes": {
          "$ref": "#/definitions/v1Bayes"
        },
        "hyperopt": {
          "$ref": "#/definitions/v1Hyperopt"
        },
        "iterative": {
          "$ref": "#/definitions/v1Iterative"
        },
        "mapping": {
          "$ref": "#/definitions/v1Mapping"
        }
      },
      "title": "All Schemas message"
    },
    "v1MatrixKind": {
      "type": "string",
      "enum": [
        "random",
        "grid",
        "hyperband",
        "bayes",
        "hyperopt",
        "iterative",
        "mapping"
      ],
      "default": "random"
    },
    "v1MedianStoppingPolicy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this stopping policy, should be equal to \"median\"",
          "default": "median"
        },
        "evaluation_interval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval/Frequency for applying the policy."
        },
        "min_interval": {
          "type": "integer",
          "format": "int32",
          "title": "Min interval (e.g steps) before starting the process"
        },
        "min_samples": {
          "type": "integer",
          "format": "int32",
          "title": "Min samples runs succeeded before starting the process"
        }
      },
      "description": "Early stopping with median stopping, this policy computes running medians across\nall runs and stops those whose best performance is worse than the median\nof the running runs."
    },
    "v1MetricEarlyStopping": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this metric early stopping policy, should be equal to \"metric_early_stopping\"",
          "default": "metric_early_stopping"
        },
        "metric": {
          "type": "string",
          "description": "Metric name to use for early stopping."
        },
        "value": {
          "type": "string",
          "description": "Metric value to use for the condition."
        },
        "optimization": {
          "$ref": "#/definitions/v1Optimization",
          "description": "Optimization to do: maximize or minimize."
        },
        "policy": {
          "type": "object",
          "title": "Policy to use, should be one of the stopping policies:\nMedianStoppingPolicy, AverageStoppingPolicy, TruncationStoppingPolicy"
        }
      },
      "description": "MetricEarlyStoppingSchema specification\nEarly stopping based on metric config."
    },
    "v1ModelRegistry": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Optional component name, should be a valid fully qualified value: name[:version]"
        },
        "framework": {
          "type": "string",
          "title": "Model framework"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional a flag to disable the model"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Model regsitry specification"
    },
    "v1Notification": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Connections to use for notification"
        },
        "trigger": {
          "$ref": "#/definitions/v1NotificationTrigger",
          "title": "Optional trigger policy, default done"
        }
      },
      "title": "Notification message"
    },
    "v1NotificationTrigger": {
      "type": "string",
      "enum": [
        "succeeded",
        "failed",
        "stopped",
        "done"
      ],
      "default": "succeeded",
      "title": "NotificationTrigger enum"
    },
    "v1Operation": {
      "type": "object",
      "properties": {
        "version": {
          "type": "number",
          "format": "float",
          "title": "Spec version"
        },
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"operation\""
        },
        "name": {
          "type": "string",
          "title": "Optional component name override, should a valid slug"
        },
        "description": {
          "type": "string",
          "title": "Optional component description override"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional component tags override"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional preset to use for running this operation"
        },
        "queue": {
          "type": "string",
          "title": "Optional queue to use for running this operation"
        },
        "cache": {
          "$ref": "#/definitions/v1Cache",
          "title": "Optional flag to disable cache validation and force run this operation"
        },
        "termination": {
          "$ref": "#/definitions/v1Termination",
          "title": "optional termination section"
        },
        "plugins": {
          "$ref": "#/definitions/v1Plugins",
          "title": "Optional plugins to enable"
        },
        "schedule": {
          "type": "object",
          "title": "Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional events section, must be a valid List of Event option (Git/Alert/Webhook/Dataset)"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Action"
          },
          "title": "Optional actions section"
        },
        "hooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Hook"
          },
          "title": "Optional hooks section"
        },
        "matrix": {
          "type": "object",
          "title": "Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional graph dependencies of this op"
        },
        "trigger": {
          "$ref": "#/definitions/v1TriggerPolicy",
          "title": "Optional trigger policy"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "An optional list of condition to check before starting the run, entities should be a valid Condition"
        },
        "skip_on_upstream_skip": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to skip this run if upstream was skipped"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Param"
          },
          "title": "Optional dict of params"
        },
        "run_patch": {
          "type": "object",
          "title": "Optional a run section to override  the content of the run in the template\nshould be one of: Job/Service/Spark/Flink/Kubeflow/Dask/Dag"
        },
        "patch_strategy": {
          "$ref": "#/definitions/v1PatchStrategy",
          "title": "Optional patch startegy, default post_merge"
        },
        "is_preset": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to mark this specification as preset"
        },
        "template": {
          "$ref": "#/definitions/v1Template",
          "title": "Optional to mark this specification as template with instructions"
        },
        "dag_ref": {
          "type": "string"
        },
        "url_ref": {
          "type": "string"
        },
        "path_ref": {
          "type": "string"
        },
        "hub_ref": {
          "type": "string"
        },
        "component": {
          "$ref": "#/definitions/v1Component"
        }
      },
      "title": "Operation specification"
    },
    "v1OperationBody": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "title": "The Operation body content as dump string"
        },
        "is_managed": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional, if the run is managed, true by default, this flag should be false if starting a non-managed run"
        },
        "name": {
          "type": "string",
          "title": "Optional, only usefule if is_managed is false"
        },
        "description": {
          "type": "string",
          "title": "Optional, only useful if is_managed is false"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional, only useful if is_managed is false"
        }
      },
      "title": "Operation creation"
    },
    "v1OperationCond": {
      "type": "object",
      "properties": {
        "io_conidtion": {
          "$ref": "#/definitions/v1IoCond"
        },
        "status_condition": {
          "$ref": "#/definitions/v1StatusCond"
        }
      }
    },
    "v1Optimization": {
      "type": "string",
      "enum": [
        "maximize",
        "minimize"
      ],
      "default": "maximize",
      "description": "- maximize: Minimize a metric\n - minimize: Minimize a metric",
      "title": "Optimization enum for metrics"
    },
    "v1OptimizationMetric": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the metric to optimize"
        },
        "optimization": {
          "$ref": "#/definitions/v1Optimization",
          "title": "Optimization to use fot the metric"
        }
      },
      "title": "OptimizationMetric specification"
    },
    "v1OptimizationResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the resource to allocate"
        },
        "type": {
          "$ref": "#/definitions/v1ResourceType",
          "title": "Type to use fot the resource"
        }
      },
      "title": "OptimizationResource specification"
    },
    "v1Organization": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User"
        },
        "user_email": {
          "type": "string",
          "title": "Read-only User email"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "is_public": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to tell if this organization is public"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "role": {
          "type": "string",
          "title": "Current user's role in this org"
        },
        "queue": {
          "type": "string",
          "title": "Default queue"
        },
        "preset": {
          "type": "string",
          "title": "Default preset"
        },
        "auth": {
          "type": "object",
          "title": "Auth Settings"
        },
        "plan": {
          "type": "object",
          "title": "Plan settings"
        },
        "usage": {
          "type": "object",
          "title": "Usage info"
        }
      },
      "title": "Organization specification"
    },
    "v1OrganizationMember": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User"
        },
        "user_email": {
          "type": "string",
          "title": "Read-only User email"
        },
        "role": {
          "type": "string",
          "title": "Role"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Organization member specification"
    },
    "v1Param": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "title": "The value to pass, if no ref or search is passed then it corresponds to a literal value"
        },
        "ref": {
          "type": "string",
          "title": "Ref corresponds to a reference of an object"
        },
        "search": {
          "$ref": "#/definitions/v1ParamSearch",
          "title": "Search corresponds to a valid search that can be resolved"
        },
        "connection": {
          "type": "string",
          "title": "A flag to signal to Polyaxon that this param is used with a connection"
        },
        "to_init": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to signal to Polyaxon that this param must be tranformed to an init container"
        },
        "context_only": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to signal to Polyaxon that this param should not be validated against io"
        }
      },
      "title": "Param specification"
    },
    "v1ParamSearch": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "title": "The search query"
        },
        "sort": {
          "type": "string",
          "title": "The search sort"
        },
        "limit": {
          "type": "string",
          "title": "The search limit"
        }
      },
      "title": "Param search specification"
    },
    "v1PasswordChange": {
      "type": "object",
      "properties": {
        "old_password": {
          "type": "string",
          "title": "Old password"
        },
        "new_password1": {
          "type": "string",
          "title": "New password"
        },
        "new_password2": {
          "type": "string",
          "title": "New password confirmation"
        }
      },
      "title": "User password change"
    },
    "v1PatchStrategy": {
      "type": "string",
      "enum": [
        "replace",
        "isnull",
        "post_merge",
        "pre_merge"
      ],
      "default": "replace",
      "description": "- replace: Replaces the keys\n - isnull: Only set the keys if they do not exist or if they are null\n - post_merge: Merge the all keys and replace by new one\n - pre_merge: Merge the all keys and keep old ones",
      "title": "PatchStrategy"
    },
    "v1PathRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of reference, should be equal to \"path_ref\"",
          "default": "path_ref"
        },
        "path": {
          "type": "string",
          "title": "Value"
        }
      },
      "title": "Path reference specification"
    },
    "v1Pipeline": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Optional uuid of the pipeline run"
        },
        "name": {
          "type": "string",
          "title": "Optional name of the pipeline run"
        },
        "kind": {
          "$ref": "#/definitions/v1PipelineKind",
          "title": "Optional if the pipeline kind dag/matrix"
        }
      }
    },
    "v1PipelineKind": {
      "type": "string",
      "enum": [
        "dag",
        "matrix"
      ],
      "default": "dag"
    },
    "v1Plugins": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to tell Polyaxon if it should set an auth context for the run, default true"
        },
        "docker": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to tell Polyaxon if it should set a docker socket context for the run, default false"
        },
        "shm": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to tell Polyaxon if it should set a shm context for the run, default false"
        },
        "collect_artifacts": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to tell Polyaxon to collect articats and outputs"
        },
        "collect_logs": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to tell Polyaxon to collect logs"
        },
        "collect_resources": {
          "type": "string",
          "title": "Optional flag to tell Polyaxon to collect container resouces (cpu/memory/gpu)"
        },
        "sync_statuses": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to tell Polyaxon to sync statuses"
        },
        "auto_resume": {
          "type": "boolean",
          "format": "boolean",
          "title": "Auto resume a run's artifacts (applies to resume and retries), works if collects_artifacts is enabled"
        },
        "log_level": {
          "type": "string",
          "title": "Optional log level"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Notification"
          },
          "title": "Option Notifications: Deprecated"
        }
      },
      "title": "Plugins specification"
    },
    "v1PodDNSConfig": {
      "type": "object",
      "title": "Placeholder for PodDNSConfig"
    },
    "v1PodSecurityContext": {
      "type": "object",
      "title": "Placeholder for PodSecurityContext"
    },
    "v1PolyaxonInitContainer": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "image_tag": {
          "type": "string"
        },
        "image_pull_policy": {
          "type": "string"
        },
        "resources": {
          "$ref": "#/definitions/v1ResourceRequirements"
        }
      },
      "title": "Polyaxon init specification"
    },
    "v1PolyaxonSidecarContainer": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "image_tag": {
          "type": "string"
        },
        "image_pull_policy": {
          "type": "string"
        },
        "sleep_interval": {
          "type": "integer",
          "format": "int32"
        },
        "sync_interval": {
          "type": "integer",
          "format": "int32"
        },
        "monitor_logs": {
          "type": "boolean",
          "format": "boolean"
        },
        "resources": {
          "$ref": "#/definitions/v1ResourceRequirements"
        }
      },
      "title": "Polyaxon sidecar specification"
    },
    "v1Preset": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "frozen": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional a flag to freeze the scheduling preset"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional a flag to disable the scheduling preset"
        },
        "content": {
          "type": "string",
          "title": "The content of the preset"
        }
      },
      "title": "Preset specification"
    },
    "v1Project": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "user": {
          "type": "string",
          "title": "Required name of user who created this entity"
        },
        "user_email": {
          "type": "string",
          "title": "Read-only email of user who created this entity"
        },
        "owner": {
          "type": "string",
          "title": "Required owner/namespace where the projet was created"
        },
        "name": {
          "type": "string",
          "title": "Required name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "is_public": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to tell if this project is public"
        },
        "bookmarked": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional if this entity was bookmarked"
        },
        "readme": {
          "type": "string",
          "title": "Optional a readme text describing this entity"
        },
        "settings": {
          "$ref": "#/definitions/v1ProjectSettings",
          "title": "Optional project settings"
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional teams assigned to a project"
        },
        "role": {
          "type": "string",
          "title": "Current user's role in this (org/teams)/project"
        }
      },
      "title": "Project specification"
    },
    "v1ProjectEntityResourceRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner of the namespace"
        },
        "project": {
          "type": "string",
          "title": "Project"
        },
        "uuid": {
          "type": "string",
          "title": "Uuid identifier of the entity"
        }
      },
      "title": "Request data to get/delete project resource entity"
    },
    "v1ProjectSettings": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized connections"
        },
        "preset": {
          "type": "string",
          "title": "Default Preset"
        },
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized Presets"
        },
        "queue": {
          "type": "string",
          "title": "Default Queue"
        },
        "queues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized queues"
        },
        "agents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized agents"
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Authorized teams"
        }
      },
      "title": "Project Settings specification"
    },
    "v1ProjectTeams": {
      "type": "object",
      "properties": {
        "teams": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Teams"
        }
      },
      "title": "Project teams specification"
    },
    "v1PytorchJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"pytorch_job\"",
          "default": "pytorch_job"
        },
        "cleanPodPolicy": {
          "$ref": "#/definitions/v1CleanPodPolicy",
          "title": "optional clean pod policy section"
        },
        "master": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Optional master replica definition"
        },
        "worker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Optional worker replica definition"
        }
      },
      "title": "Pytorch Job specification"
    },
    "v1Queue": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "agent": {
          "type": "string",
          "title": "Agent"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "title": "The queue priority"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "The queue concurrency"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Queue specification"
    },
    "v1RandomSearch": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of matrix, should be equal to \"random\"",
          "default": "random"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "title": "Hyperparams/Space definition of params to traverse"
        },
        "num_runs": {
          "type": "integer",
          "format": "int32",
          "title": "Number of runs to generate and search"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "title": "Seed for the random generator"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Number of concurrent runs"
        },
        "early_stopping": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "A list of Early stoppings, accpets both metric and failure early stopping mechanisms"
        }
      },
      "title": "Matrix based on randomly generated search space"
    },
    "v1Ray": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of runtime, should be equal to \"ray\""
        },
        "spec": {
          "type": "object",
          "title": "Spark specification"
        }
      },
      "title": "Ray specification"
    },
    "v1Reference": {
      "type": "object",
      "properties": {
        "hub_reference": {
          "$ref": "#/definitions/v1HubRef"
        },
        "dag_reference": {
          "$ref": "#/definitions/v1DagRef"
        },
        "url_reference": {
          "$ref": "#/definitions/v1UrlRef"
        },
        "path_reference": {
          "$ref": "#/definitions/v1PathRef"
        }
      },
      "title": "Reference specification"
    },
    "v1RepeatableSchedule": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of schedule, should be equal to \"repeatable\"",
          "default": "repeatable"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "title": "Limit to stop executing this schedule"
        },
        "depends_on_past": {
          "type": "boolean",
          "format": "boolean",
          "title": "A flag to set a dependency on past executions"
        }
      },
      "title": "Repeatable schedule specification"
    },
    "v1ResourceRequirements": {
      "type": "object",
      "title": "Placeholder Resource Requirements"
    },
    "v1ResourceType": {
      "type": "string",
      "enum": [
        "int",
        "float"
      ],
      "default": "int",
      "description": "- int: Int resource\n - float: Float resource",
      "title": "ResourceTypes enum for optmiztion resources"
    },
    "v1Run": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Optional name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "user": {
          "type": "string",
          "title": "Required name of user started this entity"
        },
        "owner": {
          "type": "string",
          "title": "Required name of owner of this entity"
        },
        "project": {
          "type": "string",
          "title": "Required project name"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was started"
        },
        "finished_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was started"
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "title": "Optional run time of the entity"
        },
        "is_managed": {
          "type": "string",
          "title": "Optional flag to tell if this entity is managed by the platform"
        },
        "content": {
          "type": "string",
          "title": "Optional content of the entity's spec"
        },
        "raw_content": {
          "type": "string",
          "title": "Optional content of the entity's spec"
        },
        "status": {
          "$ref": "#/definitions/v1Statuses",
          "title": "Optional latest status of this entity"
        },
        "bookmarked": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional if this entity was bookmarked"
        },
        "meta_info": {
          "type": "object",
          "title": "Optional run meta info"
        },
        "is_helper": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional is helper run"
        },
        "kind": {
          "$ref": "#/definitions/v1RunKind",
          "title": "Optional kind to tell the kind of this run"
        },
        "meta_kind": {
          "$ref": "#/definitions/v1RunKind",
          "title": "Optional meta kind to tell the nature of this run"
        },
        "hub": {
          "type": "string",
          "title": "Optional hub reference versioned component"
        },
        "inputs": {
          "type": "object",
          "title": "Optional inputs of this entity"
        },
        "outputs": {
          "type": "object",
          "title": "Optional outputs of this entity"
        },
        "original": {
          "$ref": "#/definitions/v1Cloning",
          "title": "Optional original run meta information"
        },
        "pipeline": {
          "$ref": "#/definitions/v1Pipeline",
          "title": "Optional pipeline run meta information"
        },
        "status_conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1StatusCondition"
          },
          "title": "The status conditions timeline"
        },
        "settings": {
          "$ref": "#/definitions/v1RunSettings",
          "title": "Optional settings"
        },
        "role": {
          "type": "string",
          "title": "Current user's role in this (org/teams)/project/runs"
        }
      },
      "title": "Run specification"
    },
    "v1RunArtifact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Artifact name"
        },
        "state": {
          "type": "string",
          "title": "State"
        },
        "kind": {
          "$ref": "#/definitions/v1ArtifactKind",
          "title": "Artifact type"
        },
        "path": {
          "type": "string",
          "title": "Artifact path"
        },
        "connection": {
          "type": "string",
          "title": "Connection"
        },
        "summary": {
          "type": "object",
          "title": "Artifact schema"
        },
        "is_input": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional flag to check the use of the artifact in a context"
        }
      },
      "title": "Run Artifact spec definition"
    },
    "v1RunArtifacts": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunArtifact"
          },
          "title": "Run Artifacts"
        }
      },
      "title": "Run Artifacts spec definition"
    },
    "v1RunKind": {
      "type": "string",
      "enum": [
        "job",
        "service",
        "dag",
        "spark",
        "dask",
        "flink",
        "ray",
        "mpijob",
        "tfjob",
        "pytorchjob",
        "matrix",
        "scheduler",
        "tuner",
        "watchdog",
        "notifier"
      ],
      "default": "job",
      "title": "Run kind enum\nKinds: job, service, dag, spark, dask, flink, ray, mpijob, tfjob, pytorchjob\nMeta kinds: job, service, dag, matrix, schedule\nhelper kinds: tuner, watchdog, notifier"
    },
    "v1RunSchema": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/v1Job"
        },
        "service": {
          "$ref": "#/definitions/v1Service"
        },
        "dag": {
          "$ref": "#/definitions/v1Dag"
        },
        "tf_job": {
          "$ref": "#/definitions/v1TFJob"
        },
        "pytorch_job": {
          "$ref": "#/definitions/v1PytorchJob"
        },
        "mpi_job": {
          "$ref": "#/definitions/v1MPIJob"
        },
        "dask": {
          "$ref": "#/definitions/v1Dask"
        },
        "spark": {
          "$ref": "#/definitions/v1Spark"
        },
        "flink": {
          "$ref": "#/definitions/v1Flink"
        },
        "ruy": {
          "$ref": "#/definitions/v1Ray"
        }
      }
    },
    "v1RunSettings": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Namespace"
        },
        "agent": {
          "$ref": "#/definitions/v1RunSettingsCatalog",
          "title": "Agent"
        },
        "queue": {
          "$ref": "#/definitions/v1RunSettingsCatalog",
          "title": "Queue"
        },
        "artifacts_store": {
          "$ref": "#/definitions/v1RunSettingsCatalog",
          "title": "Artifacts Store"
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1RunSettingsCatalog"
          },
          "title": "Connections"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "title": "Concurreny"
        },
        "meta_info": {
          "type": "object",
          "title": "Meta"
        }
      },
      "title": "Run Settings specification"
    },
    "v1RunSettingsCatalog": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Uuid"
        },
        "name": {
          "type": "string",
          "title": "Name"
        }
      },
      "title": "Run Settings catalog specification"
    },
    "v1S3Type": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string",
          "title": "Optional container"
        },
        "key": {
          "type": "string",
          "title": "Optional storage_account"
        }
      },
      "title": "Wasb type specification"
    },
    "v1Schedule": {
      "type": "object",
      "properties": {
        "cron": {
          "$ref": "#/definitions/v1CronSchedule"
        },
        "exact_time": {
          "$ref": "#/definitions/v1ExactTimeSchedule"
        },
        "interval": {
          "$ref": "#/definitions/v1IntervalSchedule"
        },
        "repeatable": {
          "$ref": "#/definitions/v1RepeatableSchedule"
        }
      },
      "title": "All Schemas message"
    },
    "v1Schemas": {
      "type": "object",
      "properties": {
        "operation_cond": {
          "$ref": "#/definitions/v1OperationCond"
        },
        "early_stopping": {
          "$ref": "#/definitions/v1EarlyStopping"
        },
        "matrix": {
          "$ref": "#/definitions/v1Matrix"
        },
        "run": {
          "$ref": "#/definitions/v1RunSchema"
        },
        "operation": {
          "$ref": "#/definitions/v1Operation"
        },
        "compiled_operation": {
          "$ref": "#/definitions/v1CompiledOperation"
        },
        "schedule": {
          "$ref": "#/definitions/v1Schedule"
        },
        "connection_schema": {
          "$ref": "#/definitions/v1ConnectionSchema"
        },
        "hp_params": {
          "$ref": "#/definitions/v1HpParams"
        },
        "reference": {
          "$ref": "#/definitions/v1Reference"
        },
        "artifacts_mount": {
          "$ref": "#/definitions/v1ArtifactsMount"
        },
        "polyaxon_sidecar_container": {
          "$ref": "#/definitions/v1PolyaxonSidecarContainer"
        },
        "polyaxon_init_container": {
          "$ref": "#/definitions/v1PolyaxonInitContainer"
        },
        "artifacs": {
          "$ref": "#/definitions/v1ArtifactsType"
        },
        "wasb": {
          "$ref": "#/definitions/v1WasbType"
        },
        "gcs": {
          "$ref": "#/definitions/v1GcsType"
        },
        "s3": {
          "$ref": "#/definitions/v1S3Type"
        },
        "autg": {
          "$ref": "#/definitions/v1AuthType"
        },
        "dockerfile": {
          "$ref": "#/definitions/v1DockerfileType"
        },
        "git": {
          "$ref": "#/definitions/v1GitType"
        },
        "uri": {
          "$ref": "#/definitions/v1UriType"
        },
        "k8s_resource": {
          "$ref": "#/definitions/v1K8sResourceType"
        },
        "connection": {
          "$ref": "#/definitions/v1ConnectionType"
        },
        "event_type": {
          "$ref": "#/definitions/v1EventType"
        },
        "event": {
          "$ref": "#/definitions/v1Event"
        },
        "matrix_kind": {
          "$ref": "#/definitions/v1MatrixKind"
        }
      }
    },
    "v1Search": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Optional name"
        },
        "description": {
          "type": "string",
          "title": "Optional description"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional tags of this entity"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional a flag to disable the store"
        },
        "spec": {
          "$ref": "#/definitions/v1SearchSpec",
          "title": "Search spec"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Search specification"
    },
    "v1SearchSpec": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "title": "Search query"
        },
        "sort": {
          "type": "string",
          "title": "Search sort"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "title": "Limit size"
        },
        "groupby": {
          "type": "string",
          "title": "Search group bys"
        },
        "columns": {
          "type": "string",
          "title": "Search columns"
        }
      },
      "title": "Search spec definition"
    },
    "v1Service": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"service\"",
          "default": "service"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "description": "Volumes is a list of volumes that can be mounted."
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections/containers section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to notification"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "title": "Optional service section"
        },
        "rewritePath": {
          "type": "boolean",
          "format": "boolean",
          "description": "Rewrite path to remove polyaxon base url(i.e. /v1/services/namespace/owner/project/).\nDefault is false, the service shoud handle a base url."
        }
      },
      "title": "Service specification"
    },
    "v1Spark": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of runtime, should be equal to \"spark\"",
          "default": "spark"
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional connections section"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Volume"
          },
          "description": "Volumes is a list of volumes that can be mounted."
        },
        "type": {
          "$ref": "#/definitions/v1SparkType",
          "description": "Type tells the type of the Spark application."
        },
        "spark_version": {
          "type": "string",
          "description": "Spark version is the version of Spark the application uses."
        },
        "python_version": {
          "type": "string",
          "description": "Spark version is the version of Spark the application uses."
        },
        "deploy_mode": {
          "$ref": "#/definitions/SparkDeployMode",
          "description": "Mode is the deployment mode of the Spark application."
        },
        "main_class": {
          "type": "string",
          "description": "MainClass is the fully-qualified main class of the Spark application.\nThis only applies to Java/Scala Spark applications."
        },
        "main_application_file": {
          "type": "string",
          "description": "MainFile is the path to a bundled JAR, Python, or R file of the application."
        },
        "arguments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Arguments is a list of arguments to be passed to the application."
        },
        "hadoop_conf": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "HadoopConf carries user-specified Hadoop configuration properties as they would use the  the \"--conf\" option\nin spark-submit.  The SparkApplication controller automatically adds prefix \"spark.hadoop.\" to Hadoop\nconfiguration properties."
        },
        "spark_conf": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "HadoopConf carries user-specified Hadoop configuration properties as they would use the  the \"--conf\" option\nin spark-submit.  The SparkApplication controller automatically adds prefix \"spark.hadoop.\" to Hadoop\nconfiguration properties."
        },
        "spark_config_map": {
          "type": "string",
          "description": "SparkConfigMap carries the name of the ConfigMap containing Spark configuration files such as log4j.properties.\nThe controller will add environment variable SPARK_CONF_DIR to the path where the ConfigMap is mounted to."
        },
        "hadoop_config_map": {
          "type": "string",
          "description": "HadoopConfigMap carries the name of the ConfigMap containing Hadoop configuration files such as core-site.xml.\nThe controller will add environment variable HADOOP_CONF_DIR to the path where the ConfigMap is mounted to."
        },
        "executor": {
          "$ref": "#/definitions/v1SparkReplica",
          "title": "Optional spark executor definition"
        },
        "driver": {
          "$ref": "#/definitions/v1SparkReplica",
          "title": "Optional spark driver definition"
        }
      },
      "title": "Spark specification"
    },
    "v1SparkReplica": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Number of replicas"
        },
        "environment": {
          "$ref": "#/definitions/v1Environment",
          "title": "Optional environment section"
        },
        "init": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Init"
          },
          "title": "Optional init connections section"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "title": "Optional sidecars section"
        },
        "container": {
          "$ref": "#/definitions/v1Container",
          "title": "Optional container to run"
        }
      },
      "title": "Spark replica definition"
    },
    "v1SparkType": {
      "type": "string",
      "enum": [
        "java",
        "scala",
        "python",
        "r"
      ],
      "default": "java"
    },
    "v1Status": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "The uuid of the run"
        },
        "status": {
          "$ref": "#/definitions/v1Statuses",
          "title": "The current status"
        },
        "status_conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1StatusCondition"
          },
          "title": "The status conditions timeline"
        }
      },
      "title": "Status specification"
    },
    "v1StatusCond": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of condition, should be equal to \"status\""
        },
        "operation": {
          "type": "string",
          "title": "Operation to set the condition on"
        },
        "trigger": {
          "type": "string",
          "title": "Trigger to check, must a valid status or union of statuses, e.g. succeeded  or succeeded | failed"
        }
      },
      "title": "Status condition specification"
    },
    "v1StatusCondition": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1Statuses",
          "title": "Status type"
        },
        "status": {
          "type": "string",
          "title": "Status state"
        },
        "reason": {
          "type": "string",
          "title": "Status reason"
        },
        "message": {
          "type": "string",
          "title": "Status message"
        },
        "last_update_time": {
          "type": "string",
          "format": "date-time",
          "title": "last update time"
        },
        "last_transition_time": {
          "type": "string",
          "format": "date-time",
          "title": "last transition time"
        }
      },
      "title": "Status condition specification"
    },
    "v1Statuses": {
      "type": "string",
      "enum": [
        "created",
        "resuming",
        "warning",
        "unschedulable",
        "compiled",
        "queued",
        "scheduled",
        "starting",
        "running",
        "succeeded",
        "failed",
        "upstream_failed",
        "stopping",
        "stopped",
        "skipped",
        "retrying",
        "unknown"
      ],
      "default": "created"
    },
    "v1TFJob": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Optional component kind, should be equal to \"pytorch_job\"",
          "default": "tfjob"
        },
        "cleanPodPolicy": {
          "$ref": "#/definitions/v1CleanPodPolicy",
          "title": "optional clean pod policy section"
        },
        "chief": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Optional chief replica definition"
        },
        "ps": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Optional ps replica definition"
        },
        "worker": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Optional worker replica definition"
        },
        "evaluator": {
          "$ref": "#/definitions/v1KFReplica",
          "title": "Optional evaluator replica definition"
        }
      },
      "title": "TF Job specification"
    },
    "v1Team": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Uuid"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "projects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Name"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Team specification"
    },
    "v1TeamMember": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User"
        },
        "user_email": {
          "type": "string",
          "title": "User email"
        },
        "role": {
          "type": "string",
          "title": "Role"
        },
        "org_role": {
          "type": "string",
          "title": "Organization Role"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Team member specification"
    },
    "v1Template": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string",
          "title": "Template description"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields that require customization"
        }
      },
      "title": "Template specification"
    },
    "v1Termination": {
      "type": "object",
      "properties": {
        "max_retries": {
          "type": "integer",
          "format": "int32",
          "title": "Max retries for a specific run"
        },
        "ttl": {
          "type": "integer",
          "format": "int32",
          "title": "A TTL definition"
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "title": "A timeout in seconds"
        }
      },
      "description": "Termination specification, it defines how to handle failures, job runtime, and cleanup policy."
    },
    "v1Token": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "UUID"
        },
        "key": {
          "type": "string",
          "title": "Key"
        },
        "name": {
          "type": "string",
          "title": "Optional token name"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional scopes allowed for this token"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optional services allowed for this token"
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional time when the entity was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Optional last time the entity was updated"
        }
      },
      "title": "Token specification"
    },
    "v1Toleration": {
      "type": "object",
      "title": "Placeholder for Toleration"
    },
    "v1TriggerPolicy": {
      "type": "string",
      "enum": [
        "all_succeeded",
        "all_failed",
        "all_done",
        "one_succeeded",
        "one_failed",
        "one_done"
      ],
      "default": "all_succeeded",
      "title": "TriggerPolicy enum"
    },
    "v1TruncationStoppingPolicy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of this stopping policy, should be equal to \"truncation\"",
          "default": "truncation"
        },
        "percent": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of runs to stop, at each evaluation interval.\ne.g. 1 - 99."
        },
        "evaluation_interval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval/Frequency for applying the policy."
        },
        "min_interval": {
          "type": "integer",
          "format": "int32",
          "title": "Min interval (e.g steps) before starting the process"
        },
        "min_samples": {
          "type": "integer",
          "format": "int32",
          "title": "Min samples runs succeeded before starting the process"
        },
        "include_succeeded": {
          "type": "boolean",
          "format": "boolean",
          "title": "Flag to include or not the succeeded runs in the calculation"
        }
      },
      "description": "Early stopping with truncation stopping, this policy stops a percentage of\nall running runs at every evaluation."
    },
    "v1UriType": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "Optional user"
        },
        "password": {
          "type": "string",
          "title": "Optional password"
        },
        "host": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional host"
        }
      },
      "title": "Uri type specification"
    },
    "v1UrlRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of reference, should be equal to \"url_ref\"",
          "default": "url_ref"
        },
        "url": {
          "type": "string",
          "title": "Value"
        }
      },
      "title": "Url reference specification"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username"
        },
        "email": {
          "type": "string",
          "title": "Email"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "theme": {
          "type": "integer",
          "format": "int32",
          "title": "Theme"
        },
        "organization": {
          "type": "string",
          "title": "Default organization"
        }
      },
      "title": "Auth specification"
    },
    "v1UserEmail": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "User username"
        }
      },
      "title": "User email"
    },
    "v1UserSingup": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "User username"
        },
        "email": {
          "type": "string",
          "title": "User email"
        },
        "organization": {
          "type": "string",
          "title": "User organization"
        },
        "password": {
          "type": "string",
          "title": "User password"
        },
        "invitation_key": {
          "type": "string",
          "title": "Invitation key"
        }
      },
      "title": "User singup"
    },
    "v1Uuids": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Version": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string",
          "title": "Min version"
        },
        "latest": {
          "type": "string",
          "title": "Latest version"
        }
      },
      "title": "Version specification"
    },
    "v1Volume": {
      "type": "object",
      "title": "Placeholder for Volume"
    },
    "v1WasbType": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string",
          "title": "Optional container"
        },
        "storage_account": {
          "type": "string",
          "title": "Optional storage_account"
        },
        "path": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional path"
        }
      },
      "title": "Wasb type specification"
    },
    "v1AverageStoppingPolicy": {
      "properties": {
        "kind": {
          "default": "average"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKey": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKey": []
    }
  ]
}
