// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * The version of the OpenAPI document: 1.1.9-rc6
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AgentStateResponseAgentState model module.
 * @module model/AgentStateResponseAgentState
 * @version 1.1.9-rc6
 */
class AgentStateResponseAgentState {
    /**
     * Constructs a new <code>AgentStateResponseAgentState</code>.
     * @alias module:model/AgentStateResponseAgentState
     */
    constructor() { 
        
        AgentStateResponseAgentState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AgentStateResponseAgentState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AgentStateResponseAgentState} obj Optional instance to populate.
     * @return {module:model/AgentStateResponseAgentState} The populated <code>AgentStateResponseAgentState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AgentStateResponseAgentState();

            if (data.hasOwnProperty('schedules')) {
                obj['schedules'] = ApiClient.convertToType(data['schedules'], Object);
            }
            if (data.hasOwnProperty('notifier')) {
                obj['notifier'] = ApiClient.convertToType(data['notifier'], Object);
            }
            if (data.hasOwnProperty('watchdogs')) {
                obj['watchdogs'] = ApiClient.convertToType(data['watchdogs'], Object);
            }
            if (data.hasOwnProperty('tuners')) {
                obj['tuners'] = ApiClient.convertToType(data['tuners'], Object);
            }
            if (data.hasOwnProperty('queued')) {
                obj['queued'] = ApiClient.convertToType(data['queued'], Object);
            }
            if (data.hasOwnProperty('stopping')) {
                obj['stopping'] = ApiClient.convertToType(data['stopping'], Object);
            }
            if (data.hasOwnProperty('apply')) {
                obj['apply'] = ApiClient.convertToType(data['apply'], Object);
            }
            if (data.hasOwnProperty('full')) {
                obj['full'] = ApiClient.convertToType(data['full'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Object} schedules
 */
AgentStateResponseAgentState.prototype['schedules'] = undefined;

/**
 * @member {Object} notifier
 */
AgentStateResponseAgentState.prototype['notifier'] = undefined;

/**
 * @member {Object} watchdogs
 */
AgentStateResponseAgentState.prototype['watchdogs'] = undefined;

/**
 * @member {Object} tuners
 */
AgentStateResponseAgentState.prototype['tuners'] = undefined;

/**
 * @member {Object} queued
 */
AgentStateResponseAgentState.prototype['queued'] = undefined;

/**
 * @member {Object} stopping
 */
AgentStateResponseAgentState.prototype['stopping'] = undefined;

/**
 * @member {Object} apply
 */
AgentStateResponseAgentState.prototype['apply'] = undefined;

/**
 * @member {Boolean} full
 */
AgentStateResponseAgentState.prototype['full'] = undefined;






export default AgentStateResponseAgentState;

